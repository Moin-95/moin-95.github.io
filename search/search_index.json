{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Arthur Picerna (ar2pi) Site Reliability Engineer at adidas . In the past, I worked at Huge , Prodigious and Aviatur . Email: arthurpicerna@gmail.com GitHub GitLab Twitter Instagram Linkedin","title":"About"},{"location":"#arthur-picerna-ar2pi","text":"Site Reliability Engineer at adidas . In the past, I worked at Huge , Prodigious and Aviatur . Email: arthurpicerna@gmail.com GitHub GitLab Twitter Instagram Linkedin","title":"Arthur Picerna (ar2pi)"},{"location":"linux/","text":"Linux Get current release version cat /etc/os-release | sed -nr \"s/VERSION=\\\"(.*)\\\"/\\1/p\" Get Ubuntu base debian version ubuntu_version=xenial curl https://git.launchpad.net/ubuntu/+source/base-files/plain/etc/debian_version?h=ubuntu/$ubuntu_version Add user to sudoers echo 'username ALL=(ALL) ALL' > /etc/sudoers.d/username sudo chmod 440 /etc/sudoers.d/username Modify PATH env variable PATH=$PATH:/path/to/bin Adding an additional PPA for newer or extra packages # https://launchpad.net/~git-core/+archive/ubuntu/ppa echo ''' deb http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main # deb-src http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main ''' | sudo tee -a /etc/apt/sources.list.d/git-core-ubuntu-ppa-xenial.list curl https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xe1dd270288b4e6030699e45fa1715d88e1df1f24 | sudo apt-key add sudo apt-get update && sudo apt-get upgrade","title":"Linux"},{"location":"linux/#linux","text":"","title":"Linux"},{"location":"linux/#get-current-release-version","text":"cat /etc/os-release | sed -nr \"s/VERSION=\\\"(.*)\\\"/\\1/p\"","title":"Get current release version"},{"location":"linux/#get-ubuntu-base-debian-version","text":"ubuntu_version=xenial curl https://git.launchpad.net/ubuntu/+source/base-files/plain/etc/debian_version?h=ubuntu/$ubuntu_version","title":"Get Ubuntu base debian version"},{"location":"linux/#add-user-to-sudoers","text":"echo 'username ALL=(ALL) ALL' > /etc/sudoers.d/username sudo chmod 440 /etc/sudoers.d/username","title":"Add user to sudoers"},{"location":"linux/#modify-path-env-variable","text":"PATH=$PATH:/path/to/bin","title":"Modify PATH env variable"},{"location":"linux/#adding-an-additional-ppa-for-newer-or-extra-packages","text":"# https://launchpad.net/~git-core/+archive/ubuntu/ppa echo ''' deb http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main # deb-src http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main ''' | sudo tee -a /etc/apt/sources.list.d/git-core-ubuntu-ppa-xenial.list curl https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xe1dd270288b4e6030699e45fa1715d88e1df1f24 | sudo apt-key add sudo apt-get update && sudo apt-get upgrade","title":"Adding an additional PPA for newer or extra packages"},{"location":"network/","text":"Network Show internal IP address IPv4 ifconfig en0 | grep -oE \"inet ([^ ]+)\" | cut -d \" \" -f 2 IPv6 ifconfig en0 | grep -oE \"inet6 ([^ ]+)\" | cut -d \" \" -f 2 Show public IP address curl ifconfig.me/ip","title":"Network"},{"location":"network/#network","text":"","title":"Network"},{"location":"network/#show-internal-ip-address","text":"IPv4 ifconfig en0 | grep -oE \"inet ([^ ]+)\" | cut -d \" \" -f 2 IPv6 ifconfig en0 | grep -oE \"inet6 ([^ ]+)\" | cut -d \" \" -f 2","title":"Show internal IP address"},{"location":"network/#show-public-ip-address","text":"curl ifconfig.me/ip","title":"Show public IP address"},{"location":"python/","text":"Python Local setup Install pyenv-virtualenv On Mac brew install pyenv-virtualenv On Linux (Debian) sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \\ libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\ libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev curl https://pyenv.run | bash echo ''' # pyenv export PYENV_ROOT=\"$HOME/.pyenv\" export PATH=\"$PYENV_ROOT/bin:$PATH\" eval \"$(pyenv init --path) ''' >> ~/.zprofile echo ''' # pyenv-virtualenv eval \"$(pyenv init -)\" eval \"$(pyenv virtualenv-init -)\" ''' >> ~/.zshrc source ~/.zprofile source ~/.zshrc pyenv-virtualenv uses python -m venv (Python 3.3+) if it is available and the virtualenv command if not. Install a Python 3 env # list possible python versions pyenv install --list | grep 3.9 | less # install a python version pyenv install 3.9.6 # create a new virtualenv pyenv virtualenv 3.9.6 python3 # activate a virtualenv pyenv activate python3 # deactivate a virtualenv pyenv deactivate # path to python executable pyenv which python # list available virtualenvs pyenv virtualenvs # delete existing virtualenv pyenv uninstall python3 Generate a .python-version file .python-version is used by pyenv-virtualenv to automatically switch to correct env. pyenv version-name > .python-version Generate a requirements.txt file # create a new virtualenv pyenv virtualenv 3.9.6 NAME # install dependencies pip install DEPENDENCY_1 DEPENDENCY_2 # freeze requirements pip freeze > requirements.txt Install dependencies from a requirements.txt file pip install -r requirements.txt Containerized Python development Docker blog post series","title":"Python"},{"location":"python/#python","text":"","title":"Python"},{"location":"python/#local-setup","text":"Install pyenv-virtualenv On Mac brew install pyenv-virtualenv On Linux (Debian) sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \\ libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\ libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev curl https://pyenv.run | bash echo ''' # pyenv export PYENV_ROOT=\"$HOME/.pyenv\" export PATH=\"$PYENV_ROOT/bin:$PATH\" eval \"$(pyenv init --path) ''' >> ~/.zprofile echo ''' # pyenv-virtualenv eval \"$(pyenv init -)\" eval \"$(pyenv virtualenv-init -)\" ''' >> ~/.zshrc source ~/.zprofile source ~/.zshrc pyenv-virtualenv uses python -m venv (Python 3.3+) if it is available and the virtualenv command if not. Install a Python 3 env # list possible python versions pyenv install --list | grep 3.9 | less # install a python version pyenv install 3.9.6 # create a new virtualenv pyenv virtualenv 3.9.6 python3 # activate a virtualenv pyenv activate python3 # deactivate a virtualenv pyenv deactivate # path to python executable pyenv which python # list available virtualenvs pyenv virtualenvs # delete existing virtualenv pyenv uninstall python3","title":"Local setup"},{"location":"python/#generate-a-python-version-file","text":".python-version is used by pyenv-virtualenv to automatically switch to correct env. pyenv version-name > .python-version","title":"Generate a .python-version file"},{"location":"python/#generate-a-requirementstxt-file","text":"# create a new virtualenv pyenv virtualenv 3.9.6 NAME # install dependencies pip install DEPENDENCY_1 DEPENDENCY_2 # freeze requirements pip freeze > requirements.txt","title":"Generate a requirements.txt file"},{"location":"python/#install-dependencies-from-a-requirementstxt-file","text":"pip install -r requirements.txt","title":"Install dependencies from a requirements.txt file"},{"location":"python/#containerized-python-development","text":"Docker blog post series","title":"Containerized Python development"}]}