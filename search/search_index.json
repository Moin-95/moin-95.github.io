{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Arthur Picerna (ar2pi) Site Reliability Engineer at Booking.com . Email: hello@ar2pi.net LinkedIn Mastodon Discord GitHub / GitLab","title":"Arthur Picerna (ar2pi)"},{"location":"#arthur-picerna-ar2pi","text":"Site Reliability Engineer at Booking.com . Email: hello@ar2pi.net LinkedIn Mastodon Discord GitHub / GitLab","title":"Arthur Picerna (ar2pi)"},{"location":"git/","text":"Git Set a global user for authoring commits git config --global user.name \"YOUR_NAME\" git config --global user.email \"your_email@example.com\" Use a different user for a specific git project To use a different user than the one configured globally for authoring commits, run the following in the project folder: git config --local user.name \"YOUR_NAME\" git config --local user.email \"your_email@example.com\" Generate a ssh key Follow the instructions in GitHub Docs - Generating a new SSH key . Get public key fingerprint ssh-keygen -l -E sha256 -f ~/.ssh/id_ed25519 # or ssh-keygen -l -E md5 -f ~/.ssh/id_rsa Use distinct ssh keys between hosts Add the following in ~/.ssh/config , adapting to your specific setup: Host github.com HostName github.com User git PreferredAuthentications publickey IdentityFile ~/.ssh/[KEY_1] Host gitlab.com HostName gitlab.com User git PreferredAuthentications publickey IdentityFile ~/.ssh/[KEY_2] For more options run man ssh_config . In case you need to create ~/.ssh/config ensure proper file permissions are set with chmod 600 ~/.ssh/config Use a gpg key to sign git commits Generate a gpg key using YubiKey Generate Signature, Encryption and Authentication keys, with your YubiKey plugged in: # force the use of RSA 4096 keys gpg --edit-card gpg/card> admin gpg/card> key-attr # follow prompts and repeat for Signature, Encryption and Authentication keys # generate keys gpg --edit-card gpg/card> admin gpg/card> generate # follow prompts and repeat for Signature, Encryption and Authentication keys Tested with YubiKey 5C NFC Instruct git to use gpg key # list keys, key id is what comes after rsa4096/ gpg --list-secret-keys --keyid-format=long # configure git to sign commits with your gpg key git config --global user.signingKey [KEY_ID] git config --global commit.gpgsign true git config --global gpg.program gpg # export key to add to your GitHub profile or whatever gpg --armor --export [YOUR_EMAIL] Set touch flags sudo apt install yubikey-manager # see possible options ykman openpgp keys set-touch -h # turn flags on ykman openpgp keys set-touch sig cached ykman openpgp keys set-touch enc cached ykman openpgp keys set-touch aut cached Set up another workstation # export the GPG key from source workstation gpg --output public.pgp --armor --export [KEY_ID] # import the GPG key in target workstation gpg --import public.pgp","title":"Git"},{"location":"git/#git","text":"","title":"Git"},{"location":"git/#set-a-global-user-for-authoring-commits","text":"git config --global user.name \"YOUR_NAME\" git config --global user.email \"your_email@example.com\"","title":"Set a global user for authoring commits"},{"location":"git/#use-a-different-user-for-a-specific-git-project","text":"To use a different user than the one configured globally for authoring commits, run the following in the project folder: git config --local user.name \"YOUR_NAME\" git config --local user.email \"your_email@example.com\"","title":"Use a different user for a specific git project"},{"location":"git/#generate-a-ssh-key","text":"Follow the instructions in GitHub Docs - Generating a new SSH key .","title":"Generate a ssh key"},{"location":"git/#get-public-key-fingerprint","text":"ssh-keygen -l -E sha256 -f ~/.ssh/id_ed25519 # or ssh-keygen -l -E md5 -f ~/.ssh/id_rsa","title":"Get public key fingerprint"},{"location":"git/#use-distinct-ssh-keys-between-hosts","text":"Add the following in ~/.ssh/config , adapting to your specific setup: Host github.com HostName github.com User git PreferredAuthentications publickey IdentityFile ~/.ssh/[KEY_1] Host gitlab.com HostName gitlab.com User git PreferredAuthentications publickey IdentityFile ~/.ssh/[KEY_2] For more options run man ssh_config . In case you need to create ~/.ssh/config ensure proper file permissions are set with chmod 600 ~/.ssh/config","title":"Use distinct ssh keys between hosts"},{"location":"git/#use-a-gpg-key-to-sign-git-commits","text":"","title":"Use a gpg key to sign git commits"},{"location":"git/#generate-a-gpg-key-using-yubikey","text":"Generate Signature, Encryption and Authentication keys, with your YubiKey plugged in: # force the use of RSA 4096 keys gpg --edit-card gpg/card> admin gpg/card> key-attr # follow prompts and repeat for Signature, Encryption and Authentication keys # generate keys gpg --edit-card gpg/card> admin gpg/card> generate # follow prompts and repeat for Signature, Encryption and Authentication keys Tested with YubiKey 5C NFC","title":"Generate a gpg key using YubiKey"},{"location":"git/#instruct-git-to-use-gpg-key","text":"# list keys, key id is what comes after rsa4096/ gpg --list-secret-keys --keyid-format=long # configure git to sign commits with your gpg key git config --global user.signingKey [KEY_ID] git config --global commit.gpgsign true git config --global gpg.program gpg # export key to add to your GitHub profile or whatever gpg --armor --export [YOUR_EMAIL]","title":"Instruct git to use gpg key"},{"location":"git/#set-touch-flags","text":"sudo apt install yubikey-manager # see possible options ykman openpgp keys set-touch -h # turn flags on ykman openpgp keys set-touch sig cached ykman openpgp keys set-touch enc cached ykman openpgp keys set-touch aut cached","title":"Set touch flags"},{"location":"git/#set-up-another-workstation","text":"# export the GPG key from source workstation gpg --output public.pgp --armor --export [KEY_ID] # import the GPG key in target workstation gpg --import public.pgp","title":"Set up another workstation"},{"location":"go/","text":"Go Install golang.org/doc/install goenv bingo On Mac brew install goenv # seems outdated, no latest go versions listed On Linux (Debian) git clone https://github.com/syndbg/goenv.git ~/.goenv cat <<EOF >> ~/.zshrc # goenv export GOENV_ROOT=\"$HOME/.goenv\" export PATH=\"$PATH:$GOENV_ROOT/bin\" eval \"$(goenv init -)\" export PATH=\"$PATH:$GOROOT/bin\" export PATH=\"$PATH:$GOPATH/bin\" EOF source ~/.zshrc Configure a Go env goenv install --list # list go versions goenv install 1.17.0 # install a go version goenv global 1.17.0 # set default global go version goenv local 1.17.0 # set project version in .go-version file Other useful goenv commands: goenv version # show current go version goenv versions # show installed go versions Docs The Go Programming Language Specification The Go Standard Library Package registry Go Packages","title":"Go"},{"location":"go/#go","text":"","title":"Go"},{"location":"go/#install","text":"golang.org/doc/install goenv bingo","title":"Install"},{"location":"go/#on-mac","text":"brew install goenv # seems outdated, no latest go versions listed","title":"On Mac"},{"location":"go/#on-linux-debian","text":"git clone https://github.com/syndbg/goenv.git ~/.goenv cat <<EOF >> ~/.zshrc # goenv export GOENV_ROOT=\"$HOME/.goenv\" export PATH=\"$PATH:$GOENV_ROOT/bin\" eval \"$(goenv init -)\" export PATH=\"$PATH:$GOROOT/bin\" export PATH=\"$PATH:$GOPATH/bin\" EOF source ~/.zshrc","title":"On Linux (Debian)"},{"location":"go/#configure-a-go-env","text":"goenv install --list # list go versions goenv install 1.17.0 # install a go version goenv global 1.17.0 # set default global go version goenv local 1.17.0 # set project version in .go-version file Other useful goenv commands: goenv version # show current go version goenv versions # show installed go versions","title":"Configure a Go env"},{"location":"go/#docs","text":"The Go Programming Language Specification The Go Standard Library","title":"Docs"},{"location":"go/#package-registry","text":"Go Packages","title":"Package registry"},{"location":"kubernetes/","text":"Kubernetes Kubectl snippets Output resource manifest yaml kubectl [COMMAND] --dry-run=client -o yaml > resource.yaml Cheat sheet Official docs cheat sheet # create nginx pod on port 8080, with label tier=db and associated ClusterIP service kubectl run nginx --image=nginx:latest --port 8080 -l tier=db --expose true # create nginx deployment, with 3 replicas in dev namespace kubectl create deploy webapp --image nginx -r 3 -n dev # print imperative create command options to create LoadBalancer kubectl create svc loadbalancer -h # generate deployment yaml file (-o yaml). Don't create it(--dry-run) with 4 replicas (--replicas=4) kubectl create deployment --image=nginx nginx --replicas=4 --dry-run=client -o yaml > nginx-deployment.yaml # scale a replicaset named 'foo' to 3 kubectl scale --replicas=3 rs/foo # update existing resource kubectl edit pod/nginx # terminate existing resource and recreate it (useful when edit not possible ) kubectl replace --force -f nginx-deployment.yaml # stream all pods logs with label name=myLabel (stdout) kubectl logs -f -l env=dev --all-containers # count pods in env dev and app foo kubectl get pods -l env=dev,app=foo --no-headers | wc -l # taint node kubectl taint nodes node01 spray=mortein:NoSchedule # remove taint from node kubectl taint nodes node01 spray=mortein:NoSchedule- # label node kubectl label node/node01 color=blue Describe API resources # list all possible resources kubectl api-resources NAME SHORTNAMES APIVERSION NAMESPACED KIND bindings v1 true Binding componentstatuses cs v1 false ComponentStatus configmaps cm v1 true ConfigMap endpoints ep v1 true Endpoints events ev v1 true Event limitranges limits v1 true LimitRange namespaces ns v1 false Namespace nodes no v1 false Node persistentvolumeclaims pvc v1 true PersistentVolumeClaim persistentvolumes pv v1 false PersistentVolume pods po v1 true Pod podtemplates v1 true PodTemplate replicationcontrollers rc v1 true ReplicationController resourcequotas quota v1 true ResourceQuota secrets v1 true Secret serviceaccounts sa v1 true ServiceAccount services svc v1 true Service mutatingwebhookconfigurations admissionregistration.k8s.io/v1 false MutatingWebhookConfiguration validatingwebhookconfigurations admissionregistration.k8s.io/v1 false ValidatingWebhookConfiguration customresourcedefinitions crd,crds apiextensions.k8s.io/v1 false CustomResourceDefinition apiservices apiregistration.k8s.io/v1 false APIService controllerrevisions apps/v1 true ControllerRevision daemonsets ds apps/v1 true DaemonSet deployments deploy apps/v1 true Deployment replicasets rs apps/v1 true ReplicaSet statefulsets sts apps/v1 true StatefulSet tokenreviews authentication.k8s.io/v1 false TokenReview localsubjectaccessreviews authorization.k8s.io/v1 true LocalSubjectAccessReview selfsubjectaccessreviews authorization.k8s.io/v1 false SelfSubjectAccessReview selfsubjectrulesreviews authorization.k8s.io/v1 false SelfSubjectRulesReview subjectaccessreviews authorization.k8s.io/v1 false SubjectAccessReview horizontalpodautoscalers hpa autoscaling/v2 true HorizontalPodAutoscaler cronjobs cj batch/v1 true CronJob jobs batch/v1 true Job certificatesigningrequests csr certificates.k8s.io/v1 false CertificateSigningRequest leases coordination.k8s.io/v1 true Lease endpointslices discovery.k8s.io/v1 true EndpointSlice events ev events.k8s.io/v1 true Event flowschemas flowcontrol.apiserver.k8s.io/v1beta2 false FlowSchema prioritylevelconfigurations flowcontrol.apiserver.k8s.io/v1beta2 false PriorityLevelConfiguration helmchartconfigs helm.cattle.io/v1 true HelmChartConfig helmcharts helm.cattle.io/v1 true HelmChart addons k3s.cattle.io/v1 true Addon nodes metrics.k8s.io/v1beta1 false NodeMetrics pods metrics.k8s.io/v1beta1 true PodMetrics ingressclasses networking.k8s.io/v1 false IngressClass ingresses ing networking.k8s.io/v1 true Ingress networkpolicies netpol networking.k8s.io/v1 true NetworkPolicy runtimeclasses node.k8s.io/v1 false RuntimeClass poddisruptionbudgets pdb policy/v1 true PodDisruptionBudget podsecuritypolicies psp policy/v1beta1 false PodSecurityPolicy clusterrolebindings rbac.authorization.k8s.io/v1 false ClusterRoleBinding clusterroles rbac.authorization.k8s.io/v1 false ClusterRole rolebindings rbac.authorization.k8s.io/v1 true RoleBinding roles rbac.authorization.k8s.io/v1 true Role priorityclasses pc scheduling.k8s.io/v1 false PriorityClass csidrivers storage.k8s.io/v1 false CSIDriver csinodes storage.k8s.io/v1 false CSINode csistoragecapacities storage.k8s.io/v1beta1 true CSIStorageCapacity storageclasses sc storage.k8s.io/v1 false StorageClass volumeattachments storage.k8s.io/v1 false VolumeAttachment ingressroutes traefik.containo.us/v1alpha1 true IngressRoute ingressroutetcps traefik.containo.us/v1alpha1 true IngressRouteTCP ingressrouteudps traefik.containo.us/v1alpha1 true IngressRouteUDP middlewares traefik.containo.us/v1alpha1 true Middleware middlewaretcps traefik.containo.us/v1alpha1 true MiddlewareTCP serverstransports traefik.containo.us/v1alpha1 true ServersTransport tlsoptions traefik.containo.us/v1alpha1 true TLSOption tlsstores traefik.containo.us/v1alpha1 true TLSStore traefikservices traefik.containo.us/v1alpha1 true TraefikService # print fields documentation kubectl explain svc.spec.ports kubectl explain pods.spec.containers --recursive List cluster resources # list all resources kubectl get all -A # list all kube-system resources kubectl get all -n kube-system # watch all resources watch kubectl get all -A Change default namespace kubectl config set-context $(kubectl config current-context) --namespace dev Internal DNS Within same namespace: http://{service_name} Between distinct namespaces: http://{service_name}.{namespace}.svc.cluster.local Install kubectl https://kubernetes.io/es/docs/tasks/tools/install-kubectl/ On Mac os_kernel=darwin On Linux (Debian) os_kernel=linux # ... version=1.20.9 arch=amd64 curl -LO https://storage.googleapis.com/kubernetes-release/release/v$version/bin/$os_kernel/$arch/kubectl chmod +x ./kubectl sudo mv ./kubectl /usr/local/bin/kubectl echo ''' # kubectl auto completion source <(kubectl completion zsh) ''' >> ~/.zshrc Zsh plugin Install Kubernetes On Linux (Debian) kubeadm-config.yaml apiVersion: kubeadm.k8s.io/v1beta2 kind: ClusterConfiguration kubernetesVersion: 1.21.1 controlPlaneEndpoint: \"k8scp:6443\" networking: podSubnet: 192.168.0.0/16 # corresponds to calico.yaml CALICO_IPV4POOL_CIDR ip # cat calico.yaml | grep -C 10 CALICO_IPV4POOL_CIDR ip addr show # add eth ip to /etc/hosts apt-get install -y kubeadm=1.21.1-00 kubelet=1.21.1-00 kubectl=1.21.1-00 apt-mark hold kubelet kubeadm kubectl firewall-cmd --permanent --zone=public --add-port=6443/tcp --add-port=10250/tcp # firewall-cmd --permanent --service=service --remove-port=6443/tcp --remove-port=10250/tcp su - swapoff -a sudo kubeadm init --config=kubeadm-config.yaml --upload-certs | tee kubeadm-init.out mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config wget https://docs.projectcalico.org/manifests/calico.yaml kubectl apply -f calico.yaml kubectl describe nodes <Tab> | less kubectl get pod --all-namespaces sudo kubeadm config print init-defaults # allow control plane to run non-infrastructure pods kubectl describe node | grep -i taint kubectl taint nodes --all node-role.kubernetes.io/master-","title":"Kubernetes"},{"location":"kubernetes/#kubernetes","text":"","title":"Kubernetes"},{"location":"kubernetes/#kubectl-snippets","text":"","title":"Kubectl snippets"},{"location":"kubernetes/#output-resource-manifest-yaml","text":"kubectl [COMMAND] --dry-run=client -o yaml > resource.yaml","title":"Output resource manifest yaml"},{"location":"kubernetes/#cheat-sheet","text":"Official docs cheat sheet # create nginx pod on port 8080, with label tier=db and associated ClusterIP service kubectl run nginx --image=nginx:latest --port 8080 -l tier=db --expose true # create nginx deployment, with 3 replicas in dev namespace kubectl create deploy webapp --image nginx -r 3 -n dev # print imperative create command options to create LoadBalancer kubectl create svc loadbalancer -h # generate deployment yaml file (-o yaml). Don't create it(--dry-run) with 4 replicas (--replicas=4) kubectl create deployment --image=nginx nginx --replicas=4 --dry-run=client -o yaml > nginx-deployment.yaml # scale a replicaset named 'foo' to 3 kubectl scale --replicas=3 rs/foo # update existing resource kubectl edit pod/nginx # terminate existing resource and recreate it (useful when edit not possible ) kubectl replace --force -f nginx-deployment.yaml # stream all pods logs with label name=myLabel (stdout) kubectl logs -f -l env=dev --all-containers # count pods in env dev and app foo kubectl get pods -l env=dev,app=foo --no-headers | wc -l # taint node kubectl taint nodes node01 spray=mortein:NoSchedule # remove taint from node kubectl taint nodes node01 spray=mortein:NoSchedule- # label node kubectl label node/node01 color=blue","title":"Cheat sheet"},{"location":"kubernetes/#describe-api-resources","text":"# list all possible resources kubectl api-resources NAME SHORTNAMES APIVERSION NAMESPACED KIND bindings v1 true Binding componentstatuses cs v1 false ComponentStatus configmaps cm v1 true ConfigMap endpoints ep v1 true Endpoints events ev v1 true Event limitranges limits v1 true LimitRange namespaces ns v1 false Namespace nodes no v1 false Node persistentvolumeclaims pvc v1 true PersistentVolumeClaim persistentvolumes pv v1 false PersistentVolume pods po v1 true Pod podtemplates v1 true PodTemplate replicationcontrollers rc v1 true ReplicationController resourcequotas quota v1 true ResourceQuota secrets v1 true Secret serviceaccounts sa v1 true ServiceAccount services svc v1 true Service mutatingwebhookconfigurations admissionregistration.k8s.io/v1 false MutatingWebhookConfiguration validatingwebhookconfigurations admissionregistration.k8s.io/v1 false ValidatingWebhookConfiguration customresourcedefinitions crd,crds apiextensions.k8s.io/v1 false CustomResourceDefinition apiservices apiregistration.k8s.io/v1 false APIService controllerrevisions apps/v1 true ControllerRevision daemonsets ds apps/v1 true DaemonSet deployments deploy apps/v1 true Deployment replicasets rs apps/v1 true ReplicaSet statefulsets sts apps/v1 true StatefulSet tokenreviews authentication.k8s.io/v1 false TokenReview localsubjectaccessreviews authorization.k8s.io/v1 true LocalSubjectAccessReview selfsubjectaccessreviews authorization.k8s.io/v1 false SelfSubjectAccessReview selfsubjectrulesreviews authorization.k8s.io/v1 false SelfSubjectRulesReview subjectaccessreviews authorization.k8s.io/v1 false SubjectAccessReview horizontalpodautoscalers hpa autoscaling/v2 true HorizontalPodAutoscaler cronjobs cj batch/v1 true CronJob jobs batch/v1 true Job certificatesigningrequests csr certificates.k8s.io/v1 false CertificateSigningRequest leases coordination.k8s.io/v1 true Lease endpointslices discovery.k8s.io/v1 true EndpointSlice events ev events.k8s.io/v1 true Event flowschemas flowcontrol.apiserver.k8s.io/v1beta2 false FlowSchema prioritylevelconfigurations flowcontrol.apiserver.k8s.io/v1beta2 false PriorityLevelConfiguration helmchartconfigs helm.cattle.io/v1 true HelmChartConfig helmcharts helm.cattle.io/v1 true HelmChart addons k3s.cattle.io/v1 true Addon nodes metrics.k8s.io/v1beta1 false NodeMetrics pods metrics.k8s.io/v1beta1 true PodMetrics ingressclasses networking.k8s.io/v1 false IngressClass ingresses ing networking.k8s.io/v1 true Ingress networkpolicies netpol networking.k8s.io/v1 true NetworkPolicy runtimeclasses node.k8s.io/v1 false RuntimeClass poddisruptionbudgets pdb policy/v1 true PodDisruptionBudget podsecuritypolicies psp policy/v1beta1 false PodSecurityPolicy clusterrolebindings rbac.authorization.k8s.io/v1 false ClusterRoleBinding clusterroles rbac.authorization.k8s.io/v1 false ClusterRole rolebindings rbac.authorization.k8s.io/v1 true RoleBinding roles rbac.authorization.k8s.io/v1 true Role priorityclasses pc scheduling.k8s.io/v1 false PriorityClass csidrivers storage.k8s.io/v1 false CSIDriver csinodes storage.k8s.io/v1 false CSINode csistoragecapacities storage.k8s.io/v1beta1 true CSIStorageCapacity storageclasses sc storage.k8s.io/v1 false StorageClass volumeattachments storage.k8s.io/v1 false VolumeAttachment ingressroutes traefik.containo.us/v1alpha1 true IngressRoute ingressroutetcps traefik.containo.us/v1alpha1 true IngressRouteTCP ingressrouteudps traefik.containo.us/v1alpha1 true IngressRouteUDP middlewares traefik.containo.us/v1alpha1 true Middleware middlewaretcps traefik.containo.us/v1alpha1 true MiddlewareTCP serverstransports traefik.containo.us/v1alpha1 true ServersTransport tlsoptions traefik.containo.us/v1alpha1 true TLSOption tlsstores traefik.containo.us/v1alpha1 true TLSStore traefikservices traefik.containo.us/v1alpha1 true TraefikService # print fields documentation kubectl explain svc.spec.ports kubectl explain pods.spec.containers --recursive","title":"Describe API resources"},{"location":"kubernetes/#list-cluster-resources","text":"# list all resources kubectl get all -A # list all kube-system resources kubectl get all -n kube-system # watch all resources watch kubectl get all -A","title":"List cluster resources"},{"location":"kubernetes/#change-default-namespace","text":"kubectl config set-context $(kubectl config current-context) --namespace dev","title":"Change default namespace"},{"location":"kubernetes/#internal-dns","text":"Within same namespace: http://{service_name} Between distinct namespaces: http://{service_name}.{namespace}.svc.cluster.local","title":"Internal DNS"},{"location":"kubernetes/#install-kubectl","text":"https://kubernetes.io/es/docs/tasks/tools/install-kubectl/","title":"Install kubectl"},{"location":"kubernetes/#on-mac","text":"os_kernel=darwin","title":"On Mac"},{"location":"kubernetes/#on-linux-debian","text":"os_kernel=linux # ... version=1.20.9 arch=amd64 curl -LO https://storage.googleapis.com/kubernetes-release/release/v$version/bin/$os_kernel/$arch/kubectl chmod +x ./kubectl sudo mv ./kubectl /usr/local/bin/kubectl echo ''' # kubectl auto completion source <(kubectl completion zsh) ''' >> ~/.zshrc Zsh plugin","title":"On Linux (Debian)"},{"location":"kubernetes/#install-kubernetes","text":"","title":"Install Kubernetes"},{"location":"kubernetes/#on-linux-debian_1","text":"kubeadm-config.yaml apiVersion: kubeadm.k8s.io/v1beta2 kind: ClusterConfiguration kubernetesVersion: 1.21.1 controlPlaneEndpoint: \"k8scp:6443\" networking: podSubnet: 192.168.0.0/16 # corresponds to calico.yaml CALICO_IPV4POOL_CIDR ip # cat calico.yaml | grep -C 10 CALICO_IPV4POOL_CIDR ip addr show # add eth ip to /etc/hosts apt-get install -y kubeadm=1.21.1-00 kubelet=1.21.1-00 kubectl=1.21.1-00 apt-mark hold kubelet kubeadm kubectl firewall-cmd --permanent --zone=public --add-port=6443/tcp --add-port=10250/tcp # firewall-cmd --permanent --service=service --remove-port=6443/tcp --remove-port=10250/tcp su - swapoff -a sudo kubeadm init --config=kubeadm-config.yaml --upload-certs | tee kubeadm-init.out mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config wget https://docs.projectcalico.org/manifests/calico.yaml kubectl apply -f calico.yaml kubectl describe nodes <Tab> | less kubectl get pod --all-namespaces sudo kubeadm config print init-defaults # allow control plane to run non-infrastructure pods kubectl describe node | grep -i taint kubectl taint nodes --all node-role.kubernetes.io/master-","title":"On Linux (Debian)"},{"location":"linux-debian/","text":"Linux (Debian) Get current release version cat /etc/os-release | sed -nE \"s/VERSION=\\\"(.*)\\\"/\\1/p\" Get Ubuntu's base Debian version ubuntu_version=xenial curl https://git.launchpad.net/ubuntu/+source/base-files/plain/etc/debian_version?h=ubuntu/$ubuntu_version Add user to sudoers echo 'username ALL=(ALL) ALL' > /etc/sudoers.d/username sudo chmod 440 /etc/sudoers.d/username Modify PATH env variable PATH=$PATH:/path/to/bin Upgrade packages sudo apt update && sudo apt upgrade && sudo apt autoremove Add an additional PPA for newer or extra packages # https://launchpad.net/~git-core/+archive/ubuntu/ppa echo ''' deb http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main # deb-src http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main ''' | sudo tee -a /etc/apt/sources.list.d/git-core-ubuntu-ppa-xenial.list curl https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xe1dd270288b4e6030699e45fa1715d88e1df1f24 | sudo apt-key add sudo apt-get update && sudo apt-get upgrade Install and hold on specific package version apt-get install -y kubeadm=1.21.1-00 kubelet=1.21.1-00 kubectl=1.21.1-00 apt-mark hold kubelet kubeadm kubectl Increase max number of watched files cat /proc/sys/fs/inotify/max_user_watches sudo vi /etc/sysctl.conf # add at the end of file: # fs.inotify.max_user_watches=524288 sudo sysctl -p Filesystem Filesystem Hierarchy Standard Show directories size and last modified date sudo du --max-depth=1 -ax --si --time / Note that -x will exclude /dev , /proc , /run , sys since these are pseudo-filesystems which exist in memory only. Find files find /usr -type d -name \"icons\" ls ~/Downloads | grep .mp3 find ~/ -maxdepth 2 -type f -name \"*.mp3\" Extract files tar -xvf 02-Flat-Remix-Blue-Dark_20210620.tar.xz -C /usr/share/icons/ List open files sudo lsof -a -u r2 -c spotify -p ^9365 -d 0-$(ulimit -S -n) +D /usr | grep -E \"REG|DIR\" | less # get all files / directories under /usr open with an actual file descriptor number by user r2, comand `spotify`, except process 9365 FD mode r for read access; w for write access; u for read and write access; TYPE REG for a directory; DIR for a regular file; Processes List processes top ps aux ps axjf # show process tree pgrep -a -u r2 # list all processes by user 'r2' ulimit man limits.conf cat /etc/security/limits.conf | less ulimit -a [-S|-H] # list all Soft / Hard limits ulimit [LIMIT] [-S|-H] [NEW_LIMIT] # get / set new limit Identify shared memory segments ipcs ipcs -p # outputs creator / last operator PIDs ps aux | grep -wE -e \"2753\" -e \"851\" # see info on processes Signals for i in {1..31}; do; echo \"$i: $(kill -l $i)\"; done kill -9 PID kill -9 $(pgrep -u r2) # kill all processes by user r2 killall -9 PROCESS_NAME dpkg dpkg -l # list all packages installed dpkg --get-selections \"*wget*\" # list installed packages with 'wget' in their name dpkg -L wget # list files installed in the wget package dpkg -p wget # show information about an installed package dpkg -I webfs_1.21+ds1-8_amd64.deb # show information about a package file dpkg -c webfs_1.21+ds1-8_amd64.deb # list files in a package file dpkg -S /etc/init/networking.conf # show what package owns /etc/init/networking.conf dpkg -s wget # show the status of a package dpkg -V package # verify the installed package's integrity sudo dpkg -i foobar.deb # installing or upgrading the foobar package sudo dpkg -r package # remove all of an installed package except for its configuration files sudo dpkg -P package # remove all of an installed package, including its configuration files apt [apt|apt-get] update apt list --upgradable [apt|apt-get] upgrade [apt|apt-get] autoremove [apt|apt-cache] search metapackage # see all metapackages [apt|apt-cache] search -n wget # search for packages called 'wget' [apt|apt-cache] show wget # show package info [apt|apt-cache] [depends|rdepends] wget # show dependencies / reverse deps respectively","title":"Linux (Debian)"},{"location":"linux-debian/#linux-debian","text":"","title":"Linux (Debian)"},{"location":"linux-debian/#get-current-release-version","text":"cat /etc/os-release | sed -nE \"s/VERSION=\\\"(.*)\\\"/\\1/p\"","title":"Get current release version"},{"location":"linux-debian/#get-ubuntus-base-debian-version","text":"ubuntu_version=xenial curl https://git.launchpad.net/ubuntu/+source/base-files/plain/etc/debian_version?h=ubuntu/$ubuntu_version","title":"Get Ubuntu's base Debian version"},{"location":"linux-debian/#add-user-to-sudoers","text":"echo 'username ALL=(ALL) ALL' > /etc/sudoers.d/username sudo chmod 440 /etc/sudoers.d/username","title":"Add user to sudoers"},{"location":"linux-debian/#modify-path-env-variable","text":"PATH=$PATH:/path/to/bin","title":"Modify PATH env variable"},{"location":"linux-debian/#upgrade-packages","text":"sudo apt update && sudo apt upgrade && sudo apt autoremove","title":"Upgrade packages"},{"location":"linux-debian/#add-an-additional-ppa-for-newer-or-extra-packages","text":"# https://launchpad.net/~git-core/+archive/ubuntu/ppa echo ''' deb http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main # deb-src http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main ''' | sudo tee -a /etc/apt/sources.list.d/git-core-ubuntu-ppa-xenial.list curl https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xe1dd270288b4e6030699e45fa1715d88e1df1f24 | sudo apt-key add sudo apt-get update && sudo apt-get upgrade","title":"Add an additional PPA for newer or extra packages"},{"location":"linux-debian/#install-and-hold-on-specific-package-version","text":"apt-get install -y kubeadm=1.21.1-00 kubelet=1.21.1-00 kubectl=1.21.1-00 apt-mark hold kubelet kubeadm kubectl","title":"Install and hold on specific package version"},{"location":"linux-debian/#increase-max-number-of-watched-files","text":"cat /proc/sys/fs/inotify/max_user_watches sudo vi /etc/sysctl.conf # add at the end of file: # fs.inotify.max_user_watches=524288 sudo sysctl -p","title":"Increase max number of watched files"},{"location":"linux-debian/#filesystem","text":"Filesystem Hierarchy Standard","title":"Filesystem"},{"location":"linux-debian/#show-directories-size-and-last-modified-date","text":"sudo du --max-depth=1 -ax --si --time / Note that -x will exclude /dev , /proc , /run , sys since these are pseudo-filesystems which exist in memory only.","title":"Show directories size and last modified date"},{"location":"linux-debian/#find-files","text":"find /usr -type d -name \"icons\" ls ~/Downloads | grep .mp3 find ~/ -maxdepth 2 -type f -name \"*.mp3\"","title":"Find files"},{"location":"linux-debian/#extract-files","text":"tar -xvf 02-Flat-Remix-Blue-Dark_20210620.tar.xz -C /usr/share/icons/","title":"Extract files"},{"location":"linux-debian/#list-open-files","text":"sudo lsof -a -u r2 -c spotify -p ^9365 -d 0-$(ulimit -S -n) +D /usr | grep -E \"REG|DIR\" | less # get all files / directories under /usr open with an actual file descriptor number by user r2, comand `spotify`, except process 9365 FD mode r for read access; w for write access; u for read and write access; TYPE REG for a directory; DIR for a regular file;","title":"List open files"},{"location":"linux-debian/#processes","text":"","title":"Processes"},{"location":"linux-debian/#list-processes","text":"top ps aux ps axjf # show process tree pgrep -a -u r2 # list all processes by user 'r2'","title":"List processes"},{"location":"linux-debian/#ulimit","text":"man limits.conf cat /etc/security/limits.conf | less ulimit -a [-S|-H] # list all Soft / Hard limits ulimit [LIMIT] [-S|-H] [NEW_LIMIT] # get / set new limit","title":"ulimit"},{"location":"linux-debian/#identify-shared-memory-segments","text":"ipcs ipcs -p # outputs creator / last operator PIDs ps aux | grep -wE -e \"2753\" -e \"851\" # see info on processes","title":"Identify shared memory segments"},{"location":"linux-debian/#signals","text":"for i in {1..31}; do; echo \"$i: $(kill -l $i)\"; done kill -9 PID kill -9 $(pgrep -u r2) # kill all processes by user r2 killall -9 PROCESS_NAME","title":"Signals"},{"location":"linux-debian/#dpkg","text":"dpkg -l # list all packages installed dpkg --get-selections \"*wget*\" # list installed packages with 'wget' in their name dpkg -L wget # list files installed in the wget package dpkg -p wget # show information about an installed package dpkg -I webfs_1.21+ds1-8_amd64.deb # show information about a package file dpkg -c webfs_1.21+ds1-8_amd64.deb # list files in a package file dpkg -S /etc/init/networking.conf # show what package owns /etc/init/networking.conf dpkg -s wget # show the status of a package dpkg -V package # verify the installed package's integrity sudo dpkg -i foobar.deb # installing or upgrading the foobar package sudo dpkg -r package # remove all of an installed package except for its configuration files sudo dpkg -P package # remove all of an installed package, including its configuration files","title":"dpkg"},{"location":"linux-debian/#apt","text":"[apt|apt-get] update apt list --upgradable [apt|apt-get] upgrade [apt|apt-get] autoremove [apt|apt-cache] search metapackage # see all metapackages [apt|apt-cache] search -n wget # search for packages called 'wget' [apt|apt-cache] show wget # show package info [apt|apt-cache] [depends|rdepends] wget # show dependencies / reverse deps respectively","title":"apt"},{"location":"networking/","text":"Networking Show internal IP address On Mac # IPv4 ifconfig en0 | grep -oE \"inet ([^ ]+)\" | cut -d \" \" -f 2 # IPv6 ifconfig en0 | grep -oE \"inet6 ([^ ]+)\" | cut -d \" \" -f 2 On Linux (Debian) # IPv4 ip addr show enp4s0 | grep -oE \"inet ([^/]+)\" | cut -d \" \" -f 2 # IPv6 ip addr show enp4s0 | grep -oE \"inet6 ([^/]+)\" | cut -d \" \" -f 2 Show default gateway On Mac netstat -nr On Linux (Debian) ip route show default Show public IP address curl ifconfig.me/ip Show DNS records dig docs.ar2pi.net +nostats +nocomments +nocmd Show open ports lsof -i :8000 | grep \"(LISTEN)\" # list processes listening on port 8000 netcat TCP # sh 1 nc -l 3456 # sh 2 nc localhost 3456 # type in 'hello world' Open http://localhost:3456 and look at request headers sent to sh 1 HTTP w/ netcat printf 'GET / HTTP/1.1\\r\\nHost: ar2pi.github.com\\r\\n\\r\\n' | nc -N ar2pi.github.com 80 > response.html Redirect through netcat printf 'HTTP/1.1 302 Moved\\r\\nLocation: https://docs.ar2pi.net/' | nc -N -l 3456 Open http://localhost:3456 and witness redirect tcpdump # sh 1 sudo tcpdump -n port 80 # sh 2 printf 'GET / HTTP/1.1\\r\\nHost: ar2pi.github.com\\r\\n\\r\\n' | nc -N ar2pi.github.com 80 traceroute traceroute -T -p 80 ar2pi.github.com nmap sudo nmap -sS -p 8000 -Pn -n --open 192.168.0.13/24 socat socat tcp-listen:8001,reuseaddr,fork tcp:192.168.0.1:8000","title":"Networking"},{"location":"networking/#networking","text":"","title":"Networking"},{"location":"networking/#show-internal-ip-address","text":"","title":"Show internal IP address"},{"location":"networking/#on-mac","text":"# IPv4 ifconfig en0 | grep -oE \"inet ([^ ]+)\" | cut -d \" \" -f 2 # IPv6 ifconfig en0 | grep -oE \"inet6 ([^ ]+)\" | cut -d \" \" -f 2","title":"On Mac"},{"location":"networking/#on-linux-debian","text":"# IPv4 ip addr show enp4s0 | grep -oE \"inet ([^/]+)\" | cut -d \" \" -f 2 # IPv6 ip addr show enp4s0 | grep -oE \"inet6 ([^/]+)\" | cut -d \" \" -f 2","title":"On Linux (Debian)"},{"location":"networking/#show-default-gateway","text":"","title":"Show default gateway"},{"location":"networking/#on-mac_1","text":"netstat -nr","title":"On Mac"},{"location":"networking/#on-linux-debian_1","text":"ip route show default","title":"On Linux (Debian)"},{"location":"networking/#show-public-ip-address","text":"curl ifconfig.me/ip","title":"Show public IP address"},{"location":"networking/#show-dns-records","text":"dig docs.ar2pi.net +nostats +nocomments +nocmd","title":"Show DNS records"},{"location":"networking/#show-open-ports","text":"lsof -i :8000 | grep \"(LISTEN)\" # list processes listening on port 8000","title":"Show open ports"},{"location":"networking/#netcat","text":"","title":"netcat"},{"location":"networking/#tcp","text":"# sh 1 nc -l 3456 # sh 2 nc localhost 3456 # type in 'hello world' Open http://localhost:3456 and look at request headers sent to sh 1","title":"TCP"},{"location":"networking/#http-w-netcat","text":"printf 'GET / HTTP/1.1\\r\\nHost: ar2pi.github.com\\r\\n\\r\\n' | nc -N ar2pi.github.com 80 > response.html","title":"HTTP w/ netcat"},{"location":"networking/#redirect-through-netcat","text":"printf 'HTTP/1.1 302 Moved\\r\\nLocation: https://docs.ar2pi.net/' | nc -N -l 3456 Open http://localhost:3456 and witness redirect","title":"Redirect through netcat"},{"location":"networking/#tcpdump","text":"# sh 1 sudo tcpdump -n port 80 # sh 2 printf 'GET / HTTP/1.1\\r\\nHost: ar2pi.github.com\\r\\n\\r\\n' | nc -N ar2pi.github.com 80","title":"tcpdump"},{"location":"networking/#traceroute","text":"traceroute -T -p 80 ar2pi.github.com","title":"traceroute"},{"location":"networking/#nmap","text":"sudo nmap -sS -p 8000 -Pn -n --open 192.168.0.13/24","title":"nmap"},{"location":"networking/#socat","text":"socat tcp-listen:8001,reuseaddr,fork tcp:192.168.0.1:8000","title":"socat"},{"location":"python/","text":"Python Local setup Install pyenv and pyenv-virtualenv . Respectively for Python version management and virtualenvs management. pyenv-virtualenv uses python -m venv (Python 3.3+) if it is available and the virtualenv command if not On Mac brew install pyenv-virtualenv On Linux (Debian) sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \\ libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\ libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev curl https://pyenv.run | bash echo ''' # pyenv-virtualenv # see https://github.com/pyenv/pyenv-virtualenv export PYENV_ROOT=$HOME/.pyenv export PATH=$PATH:$PYENV_ROOT/bin eval \"$(pyenv init --path)\" eval \"$(pyenv init -)\" eval \"$(pyenv virtualenv-init -)\" ''' >> ~/.zshrc source ~/.zshrc Configure a Python 3 virtualenv pyenv install --list | grep 3.9 | less # list possible python versions pyenv install 3.9.6 # install a python version pyenv virtualenv 3.9.6 python3 # create a new virtualenv pyenv activate python3 # activate virtualenv Other useful pyenv commands: pyenv deactivate # deactivate current virtualenv pyenv versions # list installed python versions and available virtualenvs pyenv which python # see path to python executable pyenv version-name # see current virtualenv pyenv uninstall python3 # remove virtualenv / python version Generate a .python-version file pyenv version-name > .python-version .python-version is then used by pyenv-virtualenv to automatically switch to correct virtualenv. Generate a requirements.txt file pyenv virtualenv 3.9.6 [VENV_NAME] # create a new virtualenv pip install [DEPENDENCY_1] [...] # install dependencies pip freeze > requirements.txt # freeze requirements Install dependencies from a requirements.txt file pip install -r requirements.txt Containerized Python development run-python-script Read the Docker blog post series Docs The Python Language Reference The Python Standard Library Package registry PyPi Snippets #!/usr/bin/env python Consult object help help(set) Parse arguments import argparse parser = argparse.ArgumentParser() parser.add_argument('-v', '--verbose', action='store_true') parser.add_argument('-i', '--requests-interval', type=float, default=5) args = parser.parse_args() print(args.verbose, args.requests_interval) Reference: - https://docs.python.org/3/howto/argparse.html - https://docs.python.org/3/library/argparse.html Performance counter time.perf_counter() import time start = time.perf_counter() # ... end = time.perf_counter() print('timing: {time}'.format(time=(end - start))) Reference count import ctypes def ref_count(address): return ctypes.c_long.from_address(address).value Interning a = 10 b = int('1010', 2) print(hex(id(a))) print(hex(id(b))) a is b # True, in [-5, 256] a = 500 b = 500 a is b # False String interning: don't do this unless optimization is needed import sys a = 'foo' b = 'foo' a is b # True, looks like an identifier so gets interned... but don't count on it a = 'foo bar' b = 'foo bar' a is b # False a = sys.intern('foo bar') b = sys.intern('foo bar') a is b # True Peephole def my_func(): a = 24 * 60 b = 'foo' c = 'foo' * 2 d = ['foo', 'bar'] e = ('foo', 'bar') f = {'foo', 'bar'} print(my_func.__code__.co_consts) # (None, 24, 60, 'foo', 2, 'bar', 1440, 'foofoo', ('foo', 'bar')) Unpacking zen Remove list duplicates a = [1, 1, 2, 2, 3, 3] *a, = {*a} # a = [1, 2, 3] Overwrite dictionary values a = {'foo': 'bar', 'baz': 'qux'} b = {'foo': 'quux', 'quuz': 'courge'} b = {**a, **b} # b = {'foo': 'quux', 'baz': 'qux', 'quuz': 'courge'} Nested unpacking a, *b, (c, d, e) = [1, 2, 3, 'XYZ'] # a = 1, b = [2, 3], c = 'X', d = 'Y', e = 'Z'","title":"Python"},{"location":"python/#python","text":"","title":"Python"},{"location":"python/#local-setup","text":"Install pyenv and pyenv-virtualenv . Respectively for Python version management and virtualenvs management. pyenv-virtualenv uses python -m venv (Python 3.3+) if it is available and the virtualenv command if not","title":"Local setup"},{"location":"python/#on-mac","text":"brew install pyenv-virtualenv","title":"On Mac"},{"location":"python/#on-linux-debian","text":"sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \\ libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\ libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev curl https://pyenv.run | bash echo ''' # pyenv-virtualenv # see https://github.com/pyenv/pyenv-virtualenv export PYENV_ROOT=$HOME/.pyenv export PATH=$PATH:$PYENV_ROOT/bin eval \"$(pyenv init --path)\" eval \"$(pyenv init -)\" eval \"$(pyenv virtualenv-init -)\" ''' >> ~/.zshrc source ~/.zshrc","title":"On Linux (Debian)"},{"location":"python/#configure-a-python-3-virtualenv","text":"pyenv install --list | grep 3.9 | less # list possible python versions pyenv install 3.9.6 # install a python version pyenv virtualenv 3.9.6 python3 # create a new virtualenv pyenv activate python3 # activate virtualenv Other useful pyenv commands: pyenv deactivate # deactivate current virtualenv pyenv versions # list installed python versions and available virtualenvs pyenv which python # see path to python executable pyenv version-name # see current virtualenv pyenv uninstall python3 # remove virtualenv / python version","title":"Configure a Python 3 virtualenv"},{"location":"python/#generate-a-python-version-file","text":"pyenv version-name > .python-version .python-version is then used by pyenv-virtualenv to automatically switch to correct virtualenv.","title":"Generate a .python-version file"},{"location":"python/#generate-a-requirementstxt-file","text":"pyenv virtualenv 3.9.6 [VENV_NAME] # create a new virtualenv pip install [DEPENDENCY_1] [...] # install dependencies pip freeze > requirements.txt # freeze requirements","title":"Generate a requirements.txt file"},{"location":"python/#install-dependencies-from-a-requirementstxt-file","text":"pip install -r requirements.txt","title":"Install dependencies from a requirements.txt file"},{"location":"python/#containerized-python-development","text":"run-python-script Read the Docker blog post series","title":"Containerized Python development"},{"location":"python/#docs","text":"The Python Language Reference The Python Standard Library","title":"Docs"},{"location":"python/#package-registry","text":"PyPi","title":"Package registry"},{"location":"python/#snippets","text":"#!/usr/bin/env python","title":"Snippets"},{"location":"python/#consult-object-help","text":"help(set)","title":"Consult object help"},{"location":"python/#parse-arguments","text":"import argparse parser = argparse.ArgumentParser() parser.add_argument('-v', '--verbose', action='store_true') parser.add_argument('-i', '--requests-interval', type=float, default=5) args = parser.parse_args() print(args.verbose, args.requests_interval) Reference: - https://docs.python.org/3/howto/argparse.html - https://docs.python.org/3/library/argparse.html","title":"Parse arguments"},{"location":"python/#performance-counter","text":"time.perf_counter() import time start = time.perf_counter() # ... end = time.perf_counter() print('timing: {time}'.format(time=(end - start)))","title":"Performance counter"},{"location":"python/#reference-count","text":"import ctypes def ref_count(address): return ctypes.c_long.from_address(address).value","title":"Reference count"},{"location":"python/#interning","text":"a = 10 b = int('1010', 2) print(hex(id(a))) print(hex(id(b))) a is b # True, in [-5, 256] a = 500 b = 500 a is b # False String interning: don't do this unless optimization is needed import sys a = 'foo' b = 'foo' a is b # True, looks like an identifier so gets interned... but don't count on it a = 'foo bar' b = 'foo bar' a is b # False a = sys.intern('foo bar') b = sys.intern('foo bar') a is b # True","title":"Interning"},{"location":"python/#peephole","text":"def my_func(): a = 24 * 60 b = 'foo' c = 'foo' * 2 d = ['foo', 'bar'] e = ('foo', 'bar') f = {'foo', 'bar'} print(my_func.__code__.co_consts) # (None, 24, 60, 'foo', 2, 'bar', 1440, 'foofoo', ('foo', 'bar'))","title":"Peephole"},{"location":"python/#unpacking-zen","text":"","title":"Unpacking zen"},{"location":"python/#remove-list-duplicates","text":"a = [1, 1, 2, 2, 3, 3] *a, = {*a} # a = [1, 2, 3]","title":"Remove list duplicates"},{"location":"python/#overwrite-dictionary-values","text":"a = {'foo': 'bar', 'baz': 'qux'} b = {'foo': 'quux', 'quuz': 'courge'} b = {**a, **b} # b = {'foo': 'quux', 'baz': 'qux', 'quuz': 'courge'}","title":"Overwrite dictionary values"},{"location":"python/#nested-unpacking","text":"a, *b, (c, d, e) = [1, 2, 3, 'XYZ'] # a = 1, b = [2, 3], c = 'X', d = 'Y', e = 'Z'","title":"Nested unpacking"},{"location":"shell/","text":"Shell .zshrc Gist: https://gist.github.com/ar2pi/41d1d0645d6437d7b69b6e7c64e88d8e Snippets #!/usr/bin/env {zsh,bash} Get current script directory and filename CURRENT_SCRIPT_DIR=$(dirname ${BASH_SOURCE[0]}) # Relative path CURRENT_SCRIPT_DIR=$(cd $(dirname ${BASH_SOURCE[0]}) && pwd) # Absolute path CURRENT_SCRIPT_FILE=$(basename ${BASH_SOURCE[0]}) Default variable value ${var:-\"default\"} See POSIX spec Hash tables (associative arrays) in linux shell scripts bash bash v3 function key_val () { case $1 in \"foo\") echo \"bar\";; \"baz\") echo \"qux\";; *) echo \"default\";; esac } for key in \"foo\" \"baz\"; do echo \"$key: $(key_val $key)\" done bash v4 declare -A arr arr=([foo]=bar [baz]=qux) for key in ${!arr[@]}; do echo \"$key: ${arr[$key]}\" done zsh declare -A arr arr=([foo]=bar [baz]=qux) for key value in ${(kv)arr}; do echo \"$key: $value\" done Hacky cross-shell alternative #!/bin/bash arr=( \"key value\" \"foo bar\" ) for item in \"${arr[@]}\"; do key=$(echo $item | cut -d \" \" -f 1) value=$(echo $item | cut -d \" \" -f 2) echo \"$key: $value\" done Gist Parse arguments # single argument flag if [[ ! -z ${1+_} && ($1 = \"-v\" || $1 = \"--verbose\") ]]; then is_verbose=1 fi # single argument with value if [[ ! -z ${1+_} && ($1 = \"-n\" || $1 = \"--name\") ]]; then name=$2 fi # multiple args, with positional support positional_args=() while [[ $# -gt 0 ]]; do case $1 in \"-n\"|\"--name\") name=$2; shift;; \"-v\"|\"--verbose\") is_verbose=1;; *) positional_args+=($1); shift;; esac shift done Bash command line argument parser #!/usr/bin/env bash # # An over-engineered bash argument parser # Inspired from *args and **kwargs in Python # # Usage: # parse_args \"$@\" # # Examples: # script.sh 10 20 # args: [10, 20] # kwargs: [] # script.sh --foo bar --baz qux 10 20 # args: [10, 20] # kwargs: [foo: bar, baz: qux] # script.sh -x 3 -y 2 -z -- 10 20 # args: [10, 20] # kwargs: [x: 3, y: 2, z: 1] # declare -a args declare -A kwargs function is_value () { if [[ $(echo $1 | grep -cE \"^-\") = 0 ]]; then return 0 fi return 1 } function parse_args () { local arg local value while [[ $# -gt 0 ]]; do if [[ $1 = \"--\" ]]; then shift; continue elif $(is_value $1); then arg=$1 else arg=$(echo $1 | sed -nE \"s/--?(.*)/\\1/p\") fi if [[ ! -z ${2+_} ]] && $(is_value $2) && ! $(is_value $1); then kwargs[$arg]=$2 shift elif ! $(is_value $1); then kwargs[$arg]=1 else args+=($arg) fi shift done } Gist Load other bash files [[ -f /path/to/script.sh ]] && . /path/to/script.sh #!/usr/bin/env bash # # A simple bash script to execute all adjacent scripts # # Usage: # source /path/to/all.sh # OR # . /path/to/all.sh # # Options: # -v|--verbose: verbose output # function main () { local CURRENT_SCRIPT_DIR=$(dirname ${BASH_SOURCE[0]}) local CURRENT_SCRIPT_FILE=$(basename ${BASH_SOURCE[0]}) local modules=$(ls -1 -I $CURRENT_SCRIPT_FILE $CURRENT_SCRIPT_DIR) local is_verbose=$([[ ! -z ${1+_} && ($1 = \"-v\" || $1 = \"--verbose\") ]] && echo \"1\" || echo \"0\") for module in $modules; do if [[ -f $CURRENT_SCRIPT_DIR/$module ]]; then . $CURRENT_SCRIPT_DIR/$module if [[ $is_verbose = 1 ]]; then echo \"Loaded $CURRENT_SCRIPT_DIR/$module\" fi fi done } main \"$@\" Gist Log function #!/usr/bin/env bash # # A simple bash function to output messages # # Usage: # out \"Hello world!\" # out warn \"A warning message\" # out error \"An error message\" # function out () { local RST=\"\\033[0m\" local YELLOW=\"\\033[0;33m\" local MAGENTA=\"\\033[0;35m\" local CYAN=\"\\033[0;36m\" local LIGHT_YELLOW=\"\\033[0;93m\" local LIGHT_MAGENTA=\"\\033[0;95m\" local LIGHT_CYAN=\"\\033[0;96m\" local msg=$1 local color_1=$CYAN local color_2=$LIGHT_CYAN if [[ $1 == \"warn\" ]]; then msg=$2 color_1=$YELLOW color_2=$LIGHT_YELLOW elif [[ $1 == \"error\" ]]; then msg=$2 color_1=$MAGENTA color_2=$LIGHT_MAGENTA fi echo -e \"${color_1}\u276f${color_2} $msg${RST}\" } Gist Autoload .nvmrc #!/usr/bin/env zsh # # Call `nvm use` automatically in a directory with a .nvmrc file, silently # # Usage: # Add this to your ~/.zshrc # # Taken from https://github.com/nvm-sh/nvm#zsh # Difference being that this one is less verbose (like pyenv or goenv) # autoload -U add-zsh-hook load-nvmrc() { local node_version=\"$(nvm version)\" local nvmrc_path=\"$(nvm_find_nvmrc)\" if [[ -n $nvmrc_path ]]; then local nvmrc_node_version=$(nvm version $(cat ${nvmrc_path})) if [[ $nvmrc_node_version = \"N/A\" ]]; then nvm install elif [[ $nvmrc_node_version != $node_version ]]; then nvm use > /dev/null fi elif [[ $node_version != \"$(nvm version default)\" ]]; then nvm use default > /dev/null fi } add-zsh-hook chpwd load-nvmrc load-nvmrc Gist Adblock.sh #!/usr/bin/env bash # # This script will append additional entries (from http://winhelp2002.mvps.org/hosts.txt) in /etc/hosts file. # run: \"adblock\" # # Notes: # - A backup is created as `hosts.bk` in current working directory. # cp /etc/hosts hosts.bk sudo sh -c \"curl -sSL -o - http://winhelp2002.mvps.org/hosts.txt >> /etc/hosts\" Gist","title":"Shell"},{"location":"shell/#shell","text":"","title":"Shell"},{"location":"shell/#zshrc","text":"Gist: https://gist.github.com/ar2pi/41d1d0645d6437d7b69b6e7c64e88d8e","title":".zshrc"},{"location":"shell/#snippets","text":"#!/usr/bin/env {zsh,bash}","title":"Snippets"},{"location":"shell/#get-current-script-directory-and-filename","text":"CURRENT_SCRIPT_DIR=$(dirname ${BASH_SOURCE[0]}) # Relative path CURRENT_SCRIPT_DIR=$(cd $(dirname ${BASH_SOURCE[0]}) && pwd) # Absolute path CURRENT_SCRIPT_FILE=$(basename ${BASH_SOURCE[0]})","title":"Get current script directory and filename"},{"location":"shell/#default-variable-value","text":"${var:-\"default\"} See POSIX spec","title":"Default variable value"},{"location":"shell/#hash-tables-associative-arrays-in-linux-shell-scripts","text":"","title":"Hash tables (associative arrays) in linux shell scripts"},{"location":"shell/#bash","text":"bash v3 function key_val () { case $1 in \"foo\") echo \"bar\";; \"baz\") echo \"qux\";; *) echo \"default\";; esac } for key in \"foo\" \"baz\"; do echo \"$key: $(key_val $key)\" done bash v4 declare -A arr arr=([foo]=bar [baz]=qux) for key in ${!arr[@]}; do echo \"$key: ${arr[$key]}\" done","title":"bash"},{"location":"shell/#zsh","text":"declare -A arr arr=([foo]=bar [baz]=qux) for key value in ${(kv)arr}; do echo \"$key: $value\" done","title":"zsh"},{"location":"shell/#hacky-cross-shell-alternative","text":"#!/bin/bash arr=( \"key value\" \"foo bar\" ) for item in \"${arr[@]}\"; do key=$(echo $item | cut -d \" \" -f 1) value=$(echo $item | cut -d \" \" -f 2) echo \"$key: $value\" done Gist","title":"Hacky cross-shell alternative"},{"location":"shell/#parse-arguments","text":"# single argument flag if [[ ! -z ${1+_} && ($1 = \"-v\" || $1 = \"--verbose\") ]]; then is_verbose=1 fi # single argument with value if [[ ! -z ${1+_} && ($1 = \"-n\" || $1 = \"--name\") ]]; then name=$2 fi # multiple args, with positional support positional_args=() while [[ $# -gt 0 ]]; do case $1 in \"-n\"|\"--name\") name=$2; shift;; \"-v\"|\"--verbose\") is_verbose=1;; *) positional_args+=($1); shift;; esac shift done","title":"Parse arguments"},{"location":"shell/#bash-command-line-argument-parser","text":"#!/usr/bin/env bash # # An over-engineered bash argument parser # Inspired from *args and **kwargs in Python # # Usage: # parse_args \"$@\" # # Examples: # script.sh 10 20 # args: [10, 20] # kwargs: [] # script.sh --foo bar --baz qux 10 20 # args: [10, 20] # kwargs: [foo: bar, baz: qux] # script.sh -x 3 -y 2 -z -- 10 20 # args: [10, 20] # kwargs: [x: 3, y: 2, z: 1] # declare -a args declare -A kwargs function is_value () { if [[ $(echo $1 | grep -cE \"^-\") = 0 ]]; then return 0 fi return 1 } function parse_args () { local arg local value while [[ $# -gt 0 ]]; do if [[ $1 = \"--\" ]]; then shift; continue elif $(is_value $1); then arg=$1 else arg=$(echo $1 | sed -nE \"s/--?(.*)/\\1/p\") fi if [[ ! -z ${2+_} ]] && $(is_value $2) && ! $(is_value $1); then kwargs[$arg]=$2 shift elif ! $(is_value $1); then kwargs[$arg]=1 else args+=($arg) fi shift done } Gist","title":"Bash command line argument parser"},{"location":"shell/#load-other-bash-files","text":"[[ -f /path/to/script.sh ]] && . /path/to/script.sh #!/usr/bin/env bash # # A simple bash script to execute all adjacent scripts # # Usage: # source /path/to/all.sh # OR # . /path/to/all.sh # # Options: # -v|--verbose: verbose output # function main () { local CURRENT_SCRIPT_DIR=$(dirname ${BASH_SOURCE[0]}) local CURRENT_SCRIPT_FILE=$(basename ${BASH_SOURCE[0]}) local modules=$(ls -1 -I $CURRENT_SCRIPT_FILE $CURRENT_SCRIPT_DIR) local is_verbose=$([[ ! -z ${1+_} && ($1 = \"-v\" || $1 = \"--verbose\") ]] && echo \"1\" || echo \"0\") for module in $modules; do if [[ -f $CURRENT_SCRIPT_DIR/$module ]]; then . $CURRENT_SCRIPT_DIR/$module if [[ $is_verbose = 1 ]]; then echo \"Loaded $CURRENT_SCRIPT_DIR/$module\" fi fi done } main \"$@\" Gist","title":"Load other bash files"},{"location":"shell/#log-function","text":"#!/usr/bin/env bash # # A simple bash function to output messages # # Usage: # out \"Hello world!\" # out warn \"A warning message\" # out error \"An error message\" # function out () { local RST=\"\\033[0m\" local YELLOW=\"\\033[0;33m\" local MAGENTA=\"\\033[0;35m\" local CYAN=\"\\033[0;36m\" local LIGHT_YELLOW=\"\\033[0;93m\" local LIGHT_MAGENTA=\"\\033[0;95m\" local LIGHT_CYAN=\"\\033[0;96m\" local msg=$1 local color_1=$CYAN local color_2=$LIGHT_CYAN if [[ $1 == \"warn\" ]]; then msg=$2 color_1=$YELLOW color_2=$LIGHT_YELLOW elif [[ $1 == \"error\" ]]; then msg=$2 color_1=$MAGENTA color_2=$LIGHT_MAGENTA fi echo -e \"${color_1}\u276f${color_2} $msg${RST}\" } Gist","title":"Log function"},{"location":"shell/#autoload-nvmrc","text":"#!/usr/bin/env zsh # # Call `nvm use` automatically in a directory with a .nvmrc file, silently # # Usage: # Add this to your ~/.zshrc # # Taken from https://github.com/nvm-sh/nvm#zsh # Difference being that this one is less verbose (like pyenv or goenv) # autoload -U add-zsh-hook load-nvmrc() { local node_version=\"$(nvm version)\" local nvmrc_path=\"$(nvm_find_nvmrc)\" if [[ -n $nvmrc_path ]]; then local nvmrc_node_version=$(nvm version $(cat ${nvmrc_path})) if [[ $nvmrc_node_version = \"N/A\" ]]; then nvm install elif [[ $nvmrc_node_version != $node_version ]]; then nvm use > /dev/null fi elif [[ $node_version != \"$(nvm version default)\" ]]; then nvm use default > /dev/null fi } add-zsh-hook chpwd load-nvmrc load-nvmrc Gist","title":"Autoload .nvmrc"},{"location":"shell/#adblocksh","text":"#!/usr/bin/env bash # # This script will append additional entries (from http://winhelp2002.mvps.org/hosts.txt) in /etc/hosts file. # run: \"adblock\" # # Notes: # - A backup is created as `hosts.bk` in current working directory. # cp /etc/hosts hosts.bk sudo sh -c \"curl -sSL -o - http://winhelp2002.mvps.org/hosts.txt >> /etc/hosts\" Gist","title":"Adblock.sh"},{"location":"vim/","text":"Vim :q! # force quit :wq # save and quit i # enter insert mode v # enter visual mode y # copy d # cut c # cut and enter insert mode p # paste > # indent text dd # delete current line dw # delete current word w # move forward one word b # move backwards one word $ # move to the end of current line 0 # move to the beginnning of current line G # move to the end of the file gg # move to the beginnning of the file u # undo last change CTRL+R # redo last change","title":"Vim"},{"location":"vim/#vim","text":":q! # force quit :wq # save and quit i # enter insert mode v # enter visual mode y # copy d # cut c # cut and enter insert mode p # paste > # indent text dd # delete current line dw # delete current word w # move forward one word b # move backwards one word $ # move to the end of current line 0 # move to the beginnning of current line G # move to the end of the file gg # move to the beginnning of the file u # undo last change CTRL+R # redo last change","title":"Vim"},{"location":"lab/prometheus-video-renderer/","text":"Prometheus video renderer What we'll do Render videos in Grafana through Prometheus metrics. MacroPower/prometheus_video_renderer How we do it Install dependencies brew install golang ffmpeg jsonnet-bundler cat <<EOF >> ~/.zshrc # go export GOPATH=$HOME/go export GOBIN=$HOME/go/bin export PATH=$PATH:$GOBIN EOF source ~/.zshrc go get github.com/bwplotka/bingo Setup project git clone git@github.com:MacroPower/prometheus_video_renderer.git cd prometheus_video_renderer bingo get -v (cd grafana; jb install) mkdir data docker compose up make dashboards Convert video to metrics We'll be using Nyan Cat original video for obvious reasons. Go ahead and download, name it nyan_cat.mp4 and place the file in the project folder. mkdir -p frames/nyan_cat ffmpeg -i 'nyan_cat.mp4' -vf 'scale=150:100' -vsync 0 'frames/nyan_cat/out%06d.png' mkdir -p metrics/nyan_cat ulimit -n 8192 prometheus_video_renderer --project nyan_cat --mode rgb --start-time 1628640000000 # 11-08-2021 00:00:00 Backfill metrics into Prometheus scripts/load.sh nyan_cat Visualize output Go to http://localhost:3000/d/pvr-dash-8-rgb/prometheus-video-renderer-8-0?orgId=1&from=1628675100000&to=1628675400000 Go to http://localhost:8081/render?deviceScaleFactor=1.000000&domain=localhost&encoding=&height=1080&renderKey=TljYdA5Bp7IEU7D7rasBnwc6my7mu5hW&timeout=59&timezone=&url=http://grafana:3000/d/pvr-dash-8-rgb?from%3D1628675100000%26height%3D1080%26timeout%3D59%26to%3D1628675400000%26width%3D1920%26render%3D1&width=1920 Render frames through Grafana mkdir -p frames/nyan_cat/rendered/video grafana-image-renderer-cli sequence \\ --api-url=http://localhost:3000 \\ --api-key-or-basic-auth=admin:admin \\ --dashboard=pvr-dash-8-rgb \\ --start-time=1628675099640 \\ --frame-interval=5m \\ --out-directory=frames/nyan_cat/rendered \\ --frames=1-500 Merge everything back into a video Now trim your original video to the portion of the video rendered if needed so that the audio can be merged with output. cd frames/nyan_cat/rendered ffmpeg -framerate 30 -i '%06d.png' \\ -i ../../../nyan_cat_trimmed.mp4 -c copy -map 0:0 -map 1:1 -c:v libx264rgb -pix_fmt rgb24 -preset veryslow -crf 0 -qp 0 \\ video/grafanyan_cat.mp4 Open video/grafanyan_cat.mp4 and enjoy ^_^ Example output: Resources https://grafana.com/blog/2021/07/30/how-to-use-grafana-and-prometheus-to-rickroll-your-friends-or-enemies/ https://giedrius.blog/2019/09/21/is-it-a-good-idea-to-use-prometheus-for-storing-ascii-paintings/ https://github.com/MacroPower/grafana-image-renderer-sdk-go https://github.com/grafana/grafana-image-renderer","title":"Prometheus Video Renderer"},{"location":"lab/prometheus-video-renderer/#prometheus-video-renderer","text":"","title":"Prometheus video renderer"},{"location":"lab/prometheus-video-renderer/#what-well-do","text":"Render videos in Grafana through Prometheus metrics. MacroPower/prometheus_video_renderer","title":"What we'll do"},{"location":"lab/prometheus-video-renderer/#how-we-do-it","text":"","title":"How we do it"},{"location":"lab/prometheus-video-renderer/#install-dependencies","text":"brew install golang ffmpeg jsonnet-bundler cat <<EOF >> ~/.zshrc # go export GOPATH=$HOME/go export GOBIN=$HOME/go/bin export PATH=$PATH:$GOBIN EOF source ~/.zshrc go get github.com/bwplotka/bingo","title":"Install dependencies"},{"location":"lab/prometheus-video-renderer/#setup-project","text":"git clone git@github.com:MacroPower/prometheus_video_renderer.git cd prometheus_video_renderer bingo get -v (cd grafana; jb install) mkdir data docker compose up make dashboards","title":"Setup project"},{"location":"lab/prometheus-video-renderer/#convert-video-to-metrics","text":"We'll be using Nyan Cat original video for obvious reasons. Go ahead and download, name it nyan_cat.mp4 and place the file in the project folder. mkdir -p frames/nyan_cat ffmpeg -i 'nyan_cat.mp4' -vf 'scale=150:100' -vsync 0 'frames/nyan_cat/out%06d.png' mkdir -p metrics/nyan_cat ulimit -n 8192 prometheus_video_renderer --project nyan_cat --mode rgb --start-time 1628640000000 # 11-08-2021 00:00:00","title":"Convert video to metrics"},{"location":"lab/prometheus-video-renderer/#backfill-metrics-into-prometheus","text":"scripts/load.sh nyan_cat","title":"Backfill metrics into Prometheus"},{"location":"lab/prometheus-video-renderer/#visualize-output","text":"Go to http://localhost:3000/d/pvr-dash-8-rgb/prometheus-video-renderer-8-0?orgId=1&from=1628675100000&to=1628675400000 Go to http://localhost:8081/render?deviceScaleFactor=1.000000&domain=localhost&encoding=&height=1080&renderKey=TljYdA5Bp7IEU7D7rasBnwc6my7mu5hW&timeout=59&timezone=&url=http://grafana:3000/d/pvr-dash-8-rgb?from%3D1628675100000%26height%3D1080%26timeout%3D59%26to%3D1628675400000%26width%3D1920%26render%3D1&width=1920","title":"Visualize output"},{"location":"lab/prometheus-video-renderer/#render-frames-through-grafana","text":"mkdir -p frames/nyan_cat/rendered/video grafana-image-renderer-cli sequence \\ --api-url=http://localhost:3000 \\ --api-key-or-basic-auth=admin:admin \\ --dashboard=pvr-dash-8-rgb \\ --start-time=1628675099640 \\ --frame-interval=5m \\ --out-directory=frames/nyan_cat/rendered \\ --frames=1-500","title":"Render frames through Grafana"},{"location":"lab/prometheus-video-renderer/#merge-everything-back-into-a-video","text":"Now trim your original video to the portion of the video rendered if needed so that the audio can be merged with output. cd frames/nyan_cat/rendered ffmpeg -framerate 30 -i '%06d.png' \\ -i ../../../nyan_cat_trimmed.mp4 -c copy -map 0:0 -map 1:1 -c:v libx264rgb -pix_fmt rgb24 -preset veryslow -crf 0 -qp 0 \\ video/grafanyan_cat.mp4 Open video/grafanyan_cat.mp4 and enjoy ^_^ Example output:","title":"Merge everything back into a video"},{"location":"lab/prometheus-video-renderer/#resources","text":"https://grafana.com/blog/2021/07/30/how-to-use-grafana-and-prometheus-to-rickroll-your-friends-or-enemies/ https://giedrius.blog/2019/09/21/is-it-a-good-idea-to-use-prometheus-for-storing-ascii-paintings/ https://github.com/MacroPower/grafana-image-renderer-sdk-go https://github.com/grafana/grafana-image-renderer","title":"Resources"}]}