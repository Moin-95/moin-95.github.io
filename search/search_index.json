{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Arthur Picerna (ar2pi) Site Reliability Engineer at adidas . In the past, I worked at Huge , Prodigious and Aviatur . Email: arthurpicerna@gmail.com GitHub GitLab Twitter Instagram Linkedin","title":"About"},{"location":"#arthur-picerna-ar2pi","text":"Site Reliability Engineer at adidas . In the past, I worked at Huge , Prodigious and Aviatur . Email: arthurpicerna@gmail.com GitHub GitLab Twitter Instagram Linkedin","title":"Arthur Picerna (ar2pi)"},{"location":"git/","text":"Git Generate a ssh key Follow the instructions in GitHub Docs - Generating a new SSH key . Use distinct ssh keys between hosts Add the following in ~/.ssh/config , adapting to your specific setup: Host github.com HostName github.com User git PreferredAuthentications publickey IdentityFile ~/.ssh/[KEY_1] Host gitlab.com HostName gitlab.com User git PreferredAuthentications publickey IdentityFile ~/.ssh/[KEY_2] For more options run man ssh_config . In case you need to create ~/.ssh/config ensure proper file permissions are set with chmod 600 ~/.ssh/config Set a global user for authoring commits git config --global user.name \"YOUR_NAME\" git config --global user.email \"your_email@example.com\" Use a different user for a specific git project To use a different user than the one configured globally for authoring commits, run the following in the project folder: git config --local user.name \"YOUR_NAME\" git config --local user.email \"your_email@example.com\"","title":"Git"},{"location":"git/#git","text":"","title":"Git"},{"location":"git/#generate-a-ssh-key","text":"Follow the instructions in GitHub Docs - Generating a new SSH key .","title":"Generate a ssh key"},{"location":"git/#use-distinct-ssh-keys-between-hosts","text":"Add the following in ~/.ssh/config , adapting to your specific setup: Host github.com HostName github.com User git PreferredAuthentications publickey IdentityFile ~/.ssh/[KEY_1] Host gitlab.com HostName gitlab.com User git PreferredAuthentications publickey IdentityFile ~/.ssh/[KEY_2] For more options run man ssh_config . In case you need to create ~/.ssh/config ensure proper file permissions are set with chmod 600 ~/.ssh/config","title":"Use distinct ssh keys between hosts"},{"location":"git/#set-a-global-user-for-authoring-commits","text":"git config --global user.name \"YOUR_NAME\" git config --global user.email \"your_email@example.com\"","title":"Set a global user for authoring commits"},{"location":"git/#use-a-different-user-for-a-specific-git-project","text":"To use a different user than the one configured globally for authoring commits, run the following in the project folder: git config --local user.name \"YOUR_NAME\" git config --local user.email \"your_email@example.com\"","title":"Use a different user for a specific git project"},{"location":"linux-debian/","text":"Linux (Debian) Get current release version cat /etc/os-release | sed -nE \"s/VERSION=\\\"(.*)\\\"/\\1/p\" Get Ubuntu base debian version ubuntu_version=xenial curl https://git.launchpad.net/ubuntu/+source/base-files/plain/etc/debian_version?h=ubuntu/$ubuntu_version Add user to sudoers echo 'username ALL=(ALL) ALL' > /etc/sudoers.d/username sudo chmod 440 /etc/sudoers.d/username Modify PATH env variable PATH=$PATH:/path/to/bin Add an additional PPA for newer or extra packages # https://launchpad.net/~git-core/+archive/ubuntu/ppa echo ''' deb http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main # deb-src http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main ''' | sudo tee -a /etc/apt/sources.list.d/git-core-ubuntu-ppa-xenial.list curl https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xe1dd270288b4e6030699e45fa1715d88e1df1f24 | sudo apt-key add sudo apt-get update && sudo apt-get upgrade","title":"Linux (Debian)"},{"location":"linux-debian/#linux-debian","text":"","title":"Linux (Debian)"},{"location":"linux-debian/#get-current-release-version","text":"cat /etc/os-release | sed -nE \"s/VERSION=\\\"(.*)\\\"/\\1/p\"","title":"Get current release version"},{"location":"linux-debian/#get-ubuntu-base-debian-version","text":"ubuntu_version=xenial curl https://git.launchpad.net/ubuntu/+source/base-files/plain/etc/debian_version?h=ubuntu/$ubuntu_version","title":"Get Ubuntu base debian version"},{"location":"linux-debian/#add-user-to-sudoers","text":"echo 'username ALL=(ALL) ALL' > /etc/sudoers.d/username sudo chmod 440 /etc/sudoers.d/username","title":"Add user to sudoers"},{"location":"linux-debian/#modify-path-env-variable","text":"PATH=$PATH:/path/to/bin","title":"Modify PATH env variable"},{"location":"linux-debian/#add-an-additional-ppa-for-newer-or-extra-packages","text":"# https://launchpad.net/~git-core/+archive/ubuntu/ppa echo ''' deb http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main # deb-src http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main ''' | sudo tee -a /etc/apt/sources.list.d/git-core-ubuntu-ppa-xenial.list curl https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xe1dd270288b4e6030699e45fa1715d88e1df1f24 | sudo apt-key add sudo apt-get update && sudo apt-get upgrade","title":"Add an additional PPA for newer or extra packages"},{"location":"network/","text":"Network Show internal IP address On Mac # IPv4 ifconfig en0 | grep -oE \"inet ([^ ]+)\" | cut -d \" \" -f 2 # IPv6 ifconfig en0 | grep -oE \"inet6 ([^ ]+)\" | cut -d \" \" -f 2 On Linux (Debian) # IPv4 ip addr show enp4s0 | grep -oE \"inet ([^/]+)\" | cut -d \" \" -f 2 # IPv6 ip addr show enp4s0 | grep -oE \"inet6 ([^/]+)\" | cut -d \" \" -f 2 Show public IP address curl ifconfig.me/ip","title":"Network"},{"location":"network/#network","text":"","title":"Network"},{"location":"network/#show-internal-ip-address","text":"","title":"Show internal IP address"},{"location":"network/#on-mac","text":"# IPv4 ifconfig en0 | grep -oE \"inet ([^ ]+)\" | cut -d \" \" -f 2 # IPv6 ifconfig en0 | grep -oE \"inet6 ([^ ]+)\" | cut -d \" \" -f 2","title":"On Mac"},{"location":"network/#on-linux-debian","text":"# IPv4 ip addr show enp4s0 | grep -oE \"inet ([^/]+)\" | cut -d \" \" -f 2 # IPv6 ip addr show enp4s0 | grep -oE \"inet6 ([^/]+)\" | cut -d \" \" -f 2","title":"On Linux (Debian)"},{"location":"network/#show-public-ip-address","text":"curl ifconfig.me/ip","title":"Show public IP address"},{"location":"python/","text":"Python Local setup Install pyenv and pyenv-virtualenv . Respectively for Python version management and virtualenvs management. pyenv-virtualenv uses python -m venv (Python 3.3+) if it is available and the virtualenv command if not On Mac brew install pyenv-virtualenv On Linux (Debian) sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \\ libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\ libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev curl https://pyenv.run | bash echo ''' # pyenv-virtualenv # see https://github.com/pyenv/pyenv-virtualenv export PYENV_ROOT=\"$HOME/.pyenv\" export PATH=\"$PYENV_ROOT/bin:$PATH\" eval \"$(pyenv init --path)\" eval \"$(pyenv init -)\" eval \"$(pyenv virtualenv-init -)\" ''' >> ~/.zshrc source ~/.zshrc Configure a Python 3 virtualenv pyenv install --list | grep 3.9 | less # list possible python versions pyenv install 3.9.6 # install a python version pyenv virtualenv 3.9.6 python3 # create a new virtualenv pyenv activate python3 # activate virtualenv Other useful pyenv commands: pyenv deactivate # deactivate current virtualenv pyenv versions # list installed python versions and available virtualenvs pyenv which python # see path to python executable pyenv version-name # see current virtualenv pyenv uninstall python3 # remove virtualenv / python version Generate a .python-version file pyenv version-name > .python-version .python-version is then used by pyenv-virtualenv to automatically switch to correct virtualenv. Generate a requirements.txt file pyenv virtualenv 3.9.6 [VENV_NAME] # create a new virtualenv pip install [DEPENDENCY_1] [...] # install dependencies pip freeze > requirements.txt # freeze requirements Install dependencies from a requirements.txt file pip install -r requirements.txt Containerized Python development Read the Docker blog post series","title":"Python"},{"location":"python/#python","text":"","title":"Python"},{"location":"python/#local-setup","text":"Install pyenv and pyenv-virtualenv . Respectively for Python version management and virtualenvs management. pyenv-virtualenv uses python -m venv (Python 3.3+) if it is available and the virtualenv command if not","title":"Local setup"},{"location":"python/#on-mac","text":"brew install pyenv-virtualenv","title":"On Mac"},{"location":"python/#on-linux-debian","text":"sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \\ libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\ libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev curl https://pyenv.run | bash echo ''' # pyenv-virtualenv # see https://github.com/pyenv/pyenv-virtualenv export PYENV_ROOT=\"$HOME/.pyenv\" export PATH=\"$PYENV_ROOT/bin:$PATH\" eval \"$(pyenv init --path)\" eval \"$(pyenv init -)\" eval \"$(pyenv virtualenv-init -)\" ''' >> ~/.zshrc source ~/.zshrc","title":"On Linux (Debian)"},{"location":"python/#configure-a-python-3-virtualenv","text":"pyenv install --list | grep 3.9 | less # list possible python versions pyenv install 3.9.6 # install a python version pyenv virtualenv 3.9.6 python3 # create a new virtualenv pyenv activate python3 # activate virtualenv Other useful pyenv commands: pyenv deactivate # deactivate current virtualenv pyenv versions # list installed python versions and available virtualenvs pyenv which python # see path to python executable pyenv version-name # see current virtualenv pyenv uninstall python3 # remove virtualenv / python version","title":"Configure a Python 3 virtualenv"},{"location":"python/#generate-a-python-version-file","text":"pyenv version-name > .python-version .python-version is then used by pyenv-virtualenv to automatically switch to correct virtualenv.","title":"Generate a .python-version file"},{"location":"python/#generate-a-requirementstxt-file","text":"pyenv virtualenv 3.9.6 [VENV_NAME] # create a new virtualenv pip install [DEPENDENCY_1] [...] # install dependencies pip freeze > requirements.txt # freeze requirements","title":"Generate a requirements.txt file"},{"location":"python/#install-dependencies-from-a-requirementstxt-file","text":"pip install -r requirements.txt","title":"Install dependencies from a requirements.txt file"},{"location":"python/#containerized-python-development","text":"Read the Docker blog post series","title":"Containerized Python development"}]}