{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Arthur Picerna (ar2pi) Site Reliability Engineer at adidas . In the past, I worked at Huge , Prodigious and Aviatur . Email: hello@ar2pi.net GitHub GitLab Twitter Instagram Linkedin","title":"About"},{"location":"#arthur-picerna-ar2pi","text":"Site Reliability Engineer at adidas . In the past, I worked at Huge , Prodigious and Aviatur . Email: hello@ar2pi.net GitHub GitLab Twitter Instagram Linkedin","title":"Arthur Picerna (ar2pi)"},{"location":"bash-scripting/","text":"Bash scripting .zshrc Gist: https://gist.github.com/ar2pi/41d1d0645d6437d7b69b6e7c64e88d8e Snippets #!/usr/bin/env {zsh,bash} Log function #!/usr/bin/env bash # # A simple bash function to output messages # # Usage: # out \"Hello world!\" # out warn \"A warning message\" # out error \"An error message\" # function out () { local RST=\"\\033[0m\" local YELLOW=\"\\033[0;33m\" local MAGENTA=\"\\033[0;35m\" local CYAN=\"\\033[0;36m\" local LIGHT_YELLOW=\"\\033[0;93m\" local LIGHT_MAGENTA=\"\\033[0;95m\" local LIGHT_CYAN=\"\\033[0;96m\" local msg=$1 local color_1=$CYAN local color_2=$LIGHT_CYAN if [[ $1 == \"warn\" ]]; then msg=$2 color_1=$YELLOW color_2=$LIGHT_YELLOW elif [[ $1 == \"error\" ]]; then msg=$2 color_1=$MAGENTA color_2=$LIGHT_MAGENTA fi echo -e \"${color_1}\u276f${color_2} $msg${RST}\" } Gist: https://gist.github.com/ar2pi/b0c229afe9cd5f7d02645c8c62b5e989 Autoload .nvmrc #!/usr/bin/env zsh # # Call `nvm use` automatically in a directory with a .nvmrc file, silently # # Usage: # Add this to your ~/.zshrc # # Taken from https://github.com/nvm-sh/nvm#zsh # Difference being that this one is less verbose (like pyenv or goenv) # autoload -U add-zsh-hook load-nvmrc() { local node_version=\"$(nvm version)\" local nvmrc_path=\"$(nvm_find_nvmrc)\" if [[ -n $nvmrc_path ]]; then local nvmrc_node_version=$(nvm version $(cat ${nvmrc_path})) if [[ $nvmrc_node_version = \"N/A\" ]]; then nvm install elif [[ $nvmrc_node_version != $node_version ]]; then nvm use > /dev/null fi elif [[ $node_version != \"$(nvm version default)\" ]]; then nvm use default > /dev/null fi } add-zsh-hook chpwd load-nvmrc load-nvmrc Gist: https://gist.github.com/ar2pi/02d14fbc6e987056ae0efd301faf64de Adblock.sh #!/usr/bin/env bash # # This script will append additional entries (from http://winhelp2002.mvps.org/hosts.txt) in /etc/hosts file. # run: \"adblock\" # # Notes: # - A backup is created as `hosts.bk` in current working directory. # cp /etc/hosts hosts.bk sudo sh -c \"curl -sSL -o - http://winhelp2002.mvps.org/hosts.txt >> /etc/hosts\" Gist: https://gist.github.com/ar2pi/25d7ffc31cb1695bef557556ded182fe Iterate over hash table (associative array) bash Bash 3 declare -a arr # ... Bash 4 declare -A arr arr=([foo]=bar [baz]=qux) for key in ${!arr[@]}; do echo \"$key: $arr[$key]\" done zsh declare -A arr arr=([foo]=bar [baz]=qux) for key value in ${(kv)arr}; do echo \"$key: $value\" done","title":"Bash scripting"},{"location":"bash-scripting/#bash-scripting","text":"","title":"Bash scripting"},{"location":"bash-scripting/#zshrc","text":"Gist: https://gist.github.com/ar2pi/41d1d0645d6437d7b69b6e7c64e88d8e","title":".zshrc"},{"location":"bash-scripting/#snippets","text":"#!/usr/bin/env {zsh,bash}","title":"Snippets"},{"location":"bash-scripting/#log-function","text":"#!/usr/bin/env bash # # A simple bash function to output messages # # Usage: # out \"Hello world!\" # out warn \"A warning message\" # out error \"An error message\" # function out () { local RST=\"\\033[0m\" local YELLOW=\"\\033[0;33m\" local MAGENTA=\"\\033[0;35m\" local CYAN=\"\\033[0;36m\" local LIGHT_YELLOW=\"\\033[0;93m\" local LIGHT_MAGENTA=\"\\033[0;95m\" local LIGHT_CYAN=\"\\033[0;96m\" local msg=$1 local color_1=$CYAN local color_2=$LIGHT_CYAN if [[ $1 == \"warn\" ]]; then msg=$2 color_1=$YELLOW color_2=$LIGHT_YELLOW elif [[ $1 == \"error\" ]]; then msg=$2 color_1=$MAGENTA color_2=$LIGHT_MAGENTA fi echo -e \"${color_1}\u276f${color_2} $msg${RST}\" } Gist: https://gist.github.com/ar2pi/b0c229afe9cd5f7d02645c8c62b5e989","title":"Log function"},{"location":"bash-scripting/#autoload-nvmrc","text":"#!/usr/bin/env zsh # # Call `nvm use` automatically in a directory with a .nvmrc file, silently # # Usage: # Add this to your ~/.zshrc # # Taken from https://github.com/nvm-sh/nvm#zsh # Difference being that this one is less verbose (like pyenv or goenv) # autoload -U add-zsh-hook load-nvmrc() { local node_version=\"$(nvm version)\" local nvmrc_path=\"$(nvm_find_nvmrc)\" if [[ -n $nvmrc_path ]]; then local nvmrc_node_version=$(nvm version $(cat ${nvmrc_path})) if [[ $nvmrc_node_version = \"N/A\" ]]; then nvm install elif [[ $nvmrc_node_version != $node_version ]]; then nvm use > /dev/null fi elif [[ $node_version != \"$(nvm version default)\" ]]; then nvm use default > /dev/null fi } add-zsh-hook chpwd load-nvmrc load-nvmrc Gist: https://gist.github.com/ar2pi/02d14fbc6e987056ae0efd301faf64de","title":"Autoload .nvmrc"},{"location":"bash-scripting/#adblocksh","text":"#!/usr/bin/env bash # # This script will append additional entries (from http://winhelp2002.mvps.org/hosts.txt) in /etc/hosts file. # run: \"adblock\" # # Notes: # - A backup is created as `hosts.bk` in current working directory. # cp /etc/hosts hosts.bk sudo sh -c \"curl -sSL -o - http://winhelp2002.mvps.org/hosts.txt >> /etc/hosts\" Gist: https://gist.github.com/ar2pi/25d7ffc31cb1695bef557556ded182fe","title":"Adblock.sh"},{"location":"bash-scripting/#iterate-over-hash-table-associative-array","text":"","title":"Iterate over hash table (associative array)"},{"location":"bash-scripting/#bash","text":"Bash 3 declare -a arr # ... Bash 4 declare -A arr arr=([foo]=bar [baz]=qux) for key in ${!arr[@]}; do echo \"$key: $arr[$key]\" done","title":"bash"},{"location":"bash-scripting/#zsh","text":"declare -A arr arr=([foo]=bar [baz]=qux) for key value in ${(kv)arr}; do echo \"$key: $value\" done","title":"zsh"},{"location":"git/","text":"Git Generate a ssh key Follow the instructions in GitHub Docs - Generating a new SSH key . Use distinct ssh keys between hosts Add the following in ~/.ssh/config , adapting to your specific setup: Host github.com HostName github.com User git PreferredAuthentications publickey IdentityFile ~/.ssh/[KEY_1] Host gitlab.com HostName gitlab.com User git PreferredAuthentications publickey IdentityFile ~/.ssh/[KEY_2] For more options run man ssh_config . In case you need to create ~/.ssh/config ensure proper file permissions are set with chmod 600 ~/.ssh/config Set a global user for authoring commits git config --global user.name \"YOUR_NAME\" git config --global user.email \"your_email@example.com\" Use a different user for a specific git project To use a different user than the one configured globally for authoring commits, run the following in the project folder: git config --local user.name \"YOUR_NAME\" git config --local user.email \"your_email@example.com\"","title":"Git"},{"location":"git/#git","text":"","title":"Git"},{"location":"git/#generate-a-ssh-key","text":"Follow the instructions in GitHub Docs - Generating a new SSH key .","title":"Generate a ssh key"},{"location":"git/#use-distinct-ssh-keys-between-hosts","text":"Add the following in ~/.ssh/config , adapting to your specific setup: Host github.com HostName github.com User git PreferredAuthentications publickey IdentityFile ~/.ssh/[KEY_1] Host gitlab.com HostName gitlab.com User git PreferredAuthentications publickey IdentityFile ~/.ssh/[KEY_2] For more options run man ssh_config . In case you need to create ~/.ssh/config ensure proper file permissions are set with chmod 600 ~/.ssh/config","title":"Use distinct ssh keys between hosts"},{"location":"git/#set-a-global-user-for-authoring-commits","text":"git config --global user.name \"YOUR_NAME\" git config --global user.email \"your_email@example.com\"","title":"Set a global user for authoring commits"},{"location":"git/#use-a-different-user-for-a-specific-git-project","text":"To use a different user than the one configured globally for authoring commits, run the following in the project folder: git config --local user.name \"YOUR_NAME\" git config --local user.email \"your_email@example.com\"","title":"Use a different user for a specific git project"},{"location":"go/","text":"Go Install golang.org/doc/install goenv bingo On Mac brew install goenv # seems outdated, no latest go versions listed On Linux (Debian) git clone https://github.com/syndbg/goenv.git ~/.goenv cat <<EOF >> ~/.zshrc # goenv export GOENV_ROOT=\"$HOME/.goenv\" export PATH=\"$PATH:$GOENV_ROOT/bin\" eval \"$(goenv init -)\" export PATH=\"$PATH:$GOROOT/bin\" export PATH=\"$PATH:$GOPATH/bin\" EOF source ~/.zshrc Configure a Go env goenv install --list # list go versions goenv install 1.17.0 # install a go version goenv global 1.17.0 # set default global go version goenv local 1.17.0 # set project version in .go-version file Other useful goenv commands: goenv version # show current go version goenv versions # show installed go versions Docs The Go Programming Language Specification The Go Standard Library Package registry Go Packages","title":"Go"},{"location":"go/#go","text":"","title":"Go"},{"location":"go/#install","text":"golang.org/doc/install goenv bingo","title":"Install"},{"location":"go/#on-mac","text":"brew install goenv # seems outdated, no latest go versions listed","title":"On Mac"},{"location":"go/#on-linux-debian","text":"git clone https://github.com/syndbg/goenv.git ~/.goenv cat <<EOF >> ~/.zshrc # goenv export GOENV_ROOT=\"$HOME/.goenv\" export PATH=\"$PATH:$GOENV_ROOT/bin\" eval \"$(goenv init -)\" export PATH=\"$PATH:$GOROOT/bin\" export PATH=\"$PATH:$GOPATH/bin\" EOF source ~/.zshrc","title":"On Linux (Debian)"},{"location":"go/#configure-a-go-env","text":"goenv install --list # list go versions goenv install 1.17.0 # install a go version goenv global 1.17.0 # set default global go version goenv local 1.17.0 # set project version in .go-version file Other useful goenv commands: goenv version # show current go version goenv versions # show installed go versions","title":"Configure a Go env"},{"location":"go/#docs","text":"The Go Programming Language Specification The Go Standard Library","title":"Docs"},{"location":"go/#package-registry","text":"Go Packages","title":"Package registry"},{"location":"kubernetes/","text":"Kubernetes Install kubectl https://kubernetes.io/es/docs/tasks/tools/install-kubectl/ On Mac os_kernel=darwin On Linux (Debian) os_kernel=linux # ... version=1.20.9 arch=amd64 curl -LO https://storage.googleapis.com/kubernetes-release/release/v$version/bin/$os_kernel/$arch/kubectl chmod +x ./kubectl sudo mv ./kubectl /usr/local/bin/kubectl Snippets Output resource yaml kubectl [COMMAND] --dry-run=client -o yaml > resource.yaml","title":"Kubernetes"},{"location":"kubernetes/#kubernetes","text":"","title":"Kubernetes"},{"location":"kubernetes/#install-kubectl","text":"https://kubernetes.io/es/docs/tasks/tools/install-kubectl/","title":"Install kubectl"},{"location":"kubernetes/#on-mac","text":"os_kernel=darwin","title":"On Mac"},{"location":"kubernetes/#on-linux-debian","text":"os_kernel=linux # ... version=1.20.9 arch=amd64 curl -LO https://storage.googleapis.com/kubernetes-release/release/v$version/bin/$os_kernel/$arch/kubectl chmod +x ./kubectl sudo mv ./kubectl /usr/local/bin/kubectl","title":"On Linux (Debian)"},{"location":"kubernetes/#snippets","text":"","title":"Snippets"},{"location":"kubernetes/#output-resource-yaml","text":"kubectl [COMMAND] --dry-run=client -o yaml > resource.yaml","title":"Output resource yaml"},{"location":"linux-debian/","text":"Linux (Debian) Get current release version cat /etc/os-release | sed -nE \"s/VERSION=\\\"(.*)\\\"/\\1/p\" Get Ubuntu base debian version ubuntu_version=xenial curl https://git.launchpad.net/ubuntu/+source/base-files/plain/etc/debian_version?h=ubuntu/$ubuntu_version Add user to sudoers echo 'username ALL=(ALL) ALL' > /etc/sudoers.d/username sudo chmod 440 /etc/sudoers.d/username Modify PATH env variable PATH=$PATH:/path/to/bin Add an additional PPA for newer or extra packages # https://launchpad.net/~git-core/+archive/ubuntu/ppa echo ''' deb http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main # deb-src http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main ''' | sudo tee -a /etc/apt/sources.list.d/git-core-ubuntu-ppa-xenial.list curl https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xe1dd270288b4e6030699e45fa1715d88e1df1f24 | sudo apt-key add sudo apt-get update && sudo apt-get upgrade Filesystem Filesystem Hierarchy Standard Show directories size and last modified date sudo du --max-depth=1 -ax --si --time / Note that -x will exclude /dev , /proc , /run , sys since these are pseudo-filesystems which exist in memory only. Find files find ~/Downloads -maxdepth 1 -type f -name \"*.mp3\" List open files sudo lsof -a -u r2 -c spotify -p ^9365 -d 0-$(ulimit -S -n) +D /usr | grep -E \"REG|DIR\" | less # get all files / directories under /usr open with an actual file descriptor number by user r2, comand `spotify`, except process 9365 FD mode r for read access; w for write access; u for read and write access; TYPE REG for a directory; DIR for a regular file; Processes List processes top ps aux ps axjf # show process tree pgrep -a -u r2 # list all processes by user 'r2' ulimit man limits.conf cat /etc/security/limits.conf | less ulimit -a [-S|-H] # list all Soft / Hard limits ulimit [LIMIT] [-S|-H] [NEW_LIMIT] # get / set new limit Identify shared memory segments ipcs ipcs -p # outputs creator / last operator PIDs ps aux | grep -wE -e \"2753\" -e \"851\" # see info on processes Signals for i in {1..31}; do; echo \"$i: $(kill -l $i)\"; done kill -9 PID kill -9 $(pgrep -u r2) # kill all processes by user r2 killall -9 PROCESS_NAME dpkg dpkg -l # list all packages installed dpkg --get-selections \"*wget*\" # list installed packages with 'wget' in their name dpkg -L wget # list files installed in the wget package dpkg -p wget # show information about an installed package dpkg -I webfs_1.21+ds1-8_amd64.deb # show information about a package file dpkg -c webfs_1.21+ds1-8_amd64.deb # list files in a package file dpkg -S /etc/init/networking.conf # show what package owns /etc/init/networking.conf dpkg -s wget # show the status of a package dpkg -V package # verify the installed package's integrity sudo dpkg -i foobar.deb # installing or upgrading the foobar package sudo dpkg -r package # remove all of an installed package except for its configuration files sudo dpkg -P package # remove all of an installed package, including its configuration files apt [apt|apt-get] update apt list --upgradable [apt|apt-get] upgrade [apt|apt-get] autoremove [apt|apt-cache] search metapackage # see all metapackages [apt|apt-cache] search -n wget # search for packages called 'wget' [apt|apt-cache] show wget # show package info [apt|apt-cache] [depends|rdepends] wget # show dependencies / reverse deps respectively","title":"Linux (Debian)"},{"location":"linux-debian/#linux-debian","text":"","title":"Linux (Debian)"},{"location":"linux-debian/#get-current-release-version","text":"cat /etc/os-release | sed -nE \"s/VERSION=\\\"(.*)\\\"/\\1/p\"","title":"Get current release version"},{"location":"linux-debian/#get-ubuntu-base-debian-version","text":"ubuntu_version=xenial curl https://git.launchpad.net/ubuntu/+source/base-files/plain/etc/debian_version?h=ubuntu/$ubuntu_version","title":"Get Ubuntu base debian version"},{"location":"linux-debian/#add-user-to-sudoers","text":"echo 'username ALL=(ALL) ALL' > /etc/sudoers.d/username sudo chmod 440 /etc/sudoers.d/username","title":"Add user to sudoers"},{"location":"linux-debian/#modify-path-env-variable","text":"PATH=$PATH:/path/to/bin","title":"Modify PATH env variable"},{"location":"linux-debian/#add-an-additional-ppa-for-newer-or-extra-packages","text":"# https://launchpad.net/~git-core/+archive/ubuntu/ppa echo ''' deb http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main # deb-src http://ppa.launchpad.net/git-core/ppa/ubuntu/ xenial main ''' | sudo tee -a /etc/apt/sources.list.d/git-core-ubuntu-ppa-xenial.list curl https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xe1dd270288b4e6030699e45fa1715d88e1df1f24 | sudo apt-key add sudo apt-get update && sudo apt-get upgrade","title":"Add an additional PPA for newer or extra packages"},{"location":"linux-debian/#filesystem","text":"Filesystem Hierarchy Standard","title":"Filesystem"},{"location":"linux-debian/#show-directories-size-and-last-modified-date","text":"sudo du --max-depth=1 -ax --si --time / Note that -x will exclude /dev , /proc , /run , sys since these are pseudo-filesystems which exist in memory only.","title":"Show directories size and last modified date"},{"location":"linux-debian/#find-files","text":"find ~/Downloads -maxdepth 1 -type f -name \"*.mp3\"","title":"Find files"},{"location":"linux-debian/#list-open-files","text":"sudo lsof -a -u r2 -c spotify -p ^9365 -d 0-$(ulimit -S -n) +D /usr | grep -E \"REG|DIR\" | less # get all files / directories under /usr open with an actual file descriptor number by user r2, comand `spotify`, except process 9365 FD mode r for read access; w for write access; u for read and write access; TYPE REG for a directory; DIR for a regular file;","title":"List open files"},{"location":"linux-debian/#processes","text":"","title":"Processes"},{"location":"linux-debian/#list-processes","text":"top ps aux ps axjf # show process tree pgrep -a -u r2 # list all processes by user 'r2'","title":"List processes"},{"location":"linux-debian/#ulimit","text":"man limits.conf cat /etc/security/limits.conf | less ulimit -a [-S|-H] # list all Soft / Hard limits ulimit [LIMIT] [-S|-H] [NEW_LIMIT] # get / set new limit","title":"ulimit"},{"location":"linux-debian/#identify-shared-memory-segments","text":"ipcs ipcs -p # outputs creator / last operator PIDs ps aux | grep -wE -e \"2753\" -e \"851\" # see info on processes","title":"Identify shared memory segments"},{"location":"linux-debian/#signals","text":"for i in {1..31}; do; echo \"$i: $(kill -l $i)\"; done kill -9 PID kill -9 $(pgrep -u r2) # kill all processes by user r2 killall -9 PROCESS_NAME","title":"Signals"},{"location":"linux-debian/#dpkg","text":"dpkg -l # list all packages installed dpkg --get-selections \"*wget*\" # list installed packages with 'wget' in their name dpkg -L wget # list files installed in the wget package dpkg -p wget # show information about an installed package dpkg -I webfs_1.21+ds1-8_amd64.deb # show information about a package file dpkg -c webfs_1.21+ds1-8_amd64.deb # list files in a package file dpkg -S /etc/init/networking.conf # show what package owns /etc/init/networking.conf dpkg -s wget # show the status of a package dpkg -V package # verify the installed package's integrity sudo dpkg -i foobar.deb # installing or upgrading the foobar package sudo dpkg -r package # remove all of an installed package except for its configuration files sudo dpkg -P package # remove all of an installed package, including its configuration files","title":"dpkg"},{"location":"linux-debian/#apt","text":"[apt|apt-get] update apt list --upgradable [apt|apt-get] upgrade [apt|apt-get] autoremove [apt|apt-cache] search metapackage # see all metapackages [apt|apt-cache] search -n wget # search for packages called 'wget' [apt|apt-cache] show wget # show package info [apt|apt-cache] [depends|rdepends] wget # show dependencies / reverse deps respectively","title":"apt"},{"location":"networking/","text":"Networking Show internal IP address On Mac # IPv4 ifconfig en0 | grep -oE \"inet ([^ ]+)\" | cut -d \" \" -f 2 # IPv6 ifconfig en0 | grep -oE \"inet6 ([^ ]+)\" | cut -d \" \" -f 2 On Linux (Debian) # IPv4 ip addr show enp4s0 | grep -oE \"inet ([^/]+)\" | cut -d \" \" -f 2 # IPv6 ip addr show enp4s0 | grep -oE \"inet6 ([^/]+)\" | cut -d \" \" -f 2 Show default gateway On Mac netstat -nr On Linux (Debian) ip route show default Show public IP address curl ifconfig.me/ip Show DNS records dig docs.ar2pi.net +nostats +nocomments +nocmd Show open ports lsof -i :8000 | grep \"(LISTEN)\" # list processes listening on port 8000 netcat TCP # sh 1 nc -l 3456 # sh 2 nc localhost 3456 # type in 'hello world' Open http://localhost:3456 and look at request headers sent to sh 1 HTTP w/ netcat printf 'GET / HTTP/1.1\\r\\nHost: ar2pi.github.com\\r\\n\\r\\n' | nc -N ar2pi.github.com 80 > response.html Redirect through netcat printf 'HTTP/1.1 302 Moved\\r\\nLocation: https://docs.ar2pi.net/' | nc -N -l 3456 Open http://localhost:3456 and witness redirect tcpdump # sh 1 sudo tcpdump -n port 80 # sh 2 printf 'GET / HTTP/1.1\\r\\nHost: ar2pi.github.com\\r\\n\\r\\n' | nc -N ar2pi.github.com 80 traceroute traceroute -T -p 80 ar2pi.github.com nmap sudo nmap -sS -p 8000 -Pn -n --open 192.168.0.13/24 socat socat tcp-listen:8001,reuseaddr,fork tcp:192.168.0.1:8000","title":"Networking"},{"location":"networking/#networking","text":"","title":"Networking"},{"location":"networking/#show-internal-ip-address","text":"","title":"Show internal IP address"},{"location":"networking/#on-mac","text":"# IPv4 ifconfig en0 | grep -oE \"inet ([^ ]+)\" | cut -d \" \" -f 2 # IPv6 ifconfig en0 | grep -oE \"inet6 ([^ ]+)\" | cut -d \" \" -f 2","title":"On Mac"},{"location":"networking/#on-linux-debian","text":"# IPv4 ip addr show enp4s0 | grep -oE \"inet ([^/]+)\" | cut -d \" \" -f 2 # IPv6 ip addr show enp4s0 | grep -oE \"inet6 ([^/]+)\" | cut -d \" \" -f 2","title":"On Linux (Debian)"},{"location":"networking/#show-default-gateway","text":"","title":"Show default gateway"},{"location":"networking/#on-mac_1","text":"netstat -nr","title":"On Mac"},{"location":"networking/#on-linux-debian_1","text":"ip route show default","title":"On Linux (Debian)"},{"location":"networking/#show-public-ip-address","text":"curl ifconfig.me/ip","title":"Show public IP address"},{"location":"networking/#show-dns-records","text":"dig docs.ar2pi.net +nostats +nocomments +nocmd","title":"Show DNS records"},{"location":"networking/#show-open-ports","text":"lsof -i :8000 | grep \"(LISTEN)\" # list processes listening on port 8000","title":"Show open ports"},{"location":"networking/#netcat","text":"","title":"netcat"},{"location":"networking/#tcp","text":"# sh 1 nc -l 3456 # sh 2 nc localhost 3456 # type in 'hello world' Open http://localhost:3456 and look at request headers sent to sh 1","title":"TCP"},{"location":"networking/#http-w-netcat","text":"printf 'GET / HTTP/1.1\\r\\nHost: ar2pi.github.com\\r\\n\\r\\n' | nc -N ar2pi.github.com 80 > response.html","title":"HTTP w/ netcat"},{"location":"networking/#redirect-through-netcat","text":"printf 'HTTP/1.1 302 Moved\\r\\nLocation: https://docs.ar2pi.net/' | nc -N -l 3456 Open http://localhost:3456 and witness redirect","title":"Redirect through netcat"},{"location":"networking/#tcpdump","text":"# sh 1 sudo tcpdump -n port 80 # sh 2 printf 'GET / HTTP/1.1\\r\\nHost: ar2pi.github.com\\r\\n\\r\\n' | nc -N ar2pi.github.com 80","title":"tcpdump"},{"location":"networking/#traceroute","text":"traceroute -T -p 80 ar2pi.github.com","title":"traceroute"},{"location":"networking/#nmap","text":"sudo nmap -sS -p 8000 -Pn -n --open 192.168.0.13/24","title":"nmap"},{"location":"networking/#socat","text":"socat tcp-listen:8001,reuseaddr,fork tcp:192.168.0.1:8000","title":"socat"},{"location":"prometheus-video-renderer/","text":"Prometheus video renderer What we'll do Render videos in Grafana through Prometheus metrics. MacroPower/prometheus_video_renderer How we do it Install dependencies brew install golang ffmpeg jsonnet-bundler cat <<EOF >> ~/.zshrc # go export GOPATH=$HOME/go export GOBIN=$HOME/go/bin export PATH=$PATH:$GOBIN EOF source ~/.zshrc go get github.com/bwplotka/bingo Setup project git clone git@github.com:MacroPower/prometheus_video_renderer.git cd prometheus_video_renderer bingo get -v (cd grafana; jb install) mkdir data docker compose up make dashboards Convert video to metrics We'll be using Nyan Cat original video for obvious reasons. Go ahead and download, name it nyan_cat.mp4 and place the file in the project folder. mkdir -p frames/nyan_cat ffmpeg -i 'nyan_cat.mp4' -vf 'scale=150:100' -vsync 0 'frames/nyan_cat/out%06d.png' mkdir -p metrics/nyan_cat ulimit -n 8192 prometheus_video_renderer --project nyan_cat --mode rgb --start-time 1628640000000 # 11-08-2021 00:00:00 Backfill metrics into Prometheus scripts/load.sh nyan_cat Visualize output Go to http://localhost:3000/d/pvr-dash-8-rgb/prometheus-video-renderer-8-0?orgId=1&from=1628675100000&to=1628675400000 Go to http://localhost:8081/render?deviceScaleFactor=1.000000&domain=localhost&encoding=&height=1080&renderKey=TljYdA5Bp7IEU7D7rasBnwc6my7mu5hW&timeout=59&timezone=&url=http://grafana:3000/d/pvr-dash-8-rgb?from%3D1628675100000%26height%3D1080%26timeout%3D59%26to%3D1628675400000%26width%3D1920%26render%3D1&width=1920 Render frames through Grafana mkdir -p frames/nyan_cat/rendered/video grafana-image-renderer-cli sequence \\ --api-url=http://localhost:3000 \\ --api-key-or-basic-auth=admin:admin \\ --dashboard=pvr-dash-8-rgb \\ --start-time=1628675099640 \\ --frame-interval=5m \\ --out-directory=frames/nyan_cat/rendered \\ --frames=1-500 Merge everything back into a video Now trim your original video to the portion of the video rendered if needed so that the audio can be merged with output. cd frames/nyan_cat/rendered ffmpeg -framerate 30 -i '%06d.png' \\ -i ../../../nyan_cat_trimmed.mp4 -c copy -map 0:0 -map 1:1 -c:v libx264rgb -pix_fmt rgb24 -preset veryslow -crf 0 -qp 0 \\ video/grafanyan_cat.mp4 Open video/grafanyan_cat.mp4 and enjoy ^_^ Example output: Resources https://grafana.com/blog/2021/07/30/how-to-use-grafana-and-prometheus-to-rickroll-your-friends-or-enemies/ https://giedrius.blog/2019/09/21/is-it-a-good-idea-to-use-prometheus-for-storing-ascii-paintings/ https://github.com/MacroPower/grafana-image-renderer-sdk-go https://github.com/grafana/grafana-image-renderer","title":"Prometheus Video Renderer"},{"location":"prometheus-video-renderer/#prometheus-video-renderer","text":"","title":"Prometheus video renderer"},{"location":"prometheus-video-renderer/#what-well-do","text":"Render videos in Grafana through Prometheus metrics. MacroPower/prometheus_video_renderer","title":"What we'll do"},{"location":"prometheus-video-renderer/#how-we-do-it","text":"","title":"How we do it"},{"location":"prometheus-video-renderer/#install-dependencies","text":"brew install golang ffmpeg jsonnet-bundler cat <<EOF >> ~/.zshrc # go export GOPATH=$HOME/go export GOBIN=$HOME/go/bin export PATH=$PATH:$GOBIN EOF source ~/.zshrc go get github.com/bwplotka/bingo","title":"Install dependencies"},{"location":"prometheus-video-renderer/#setup-project","text":"git clone git@github.com:MacroPower/prometheus_video_renderer.git cd prometheus_video_renderer bingo get -v (cd grafana; jb install) mkdir data docker compose up make dashboards","title":"Setup project"},{"location":"prometheus-video-renderer/#convert-video-to-metrics","text":"We'll be using Nyan Cat original video for obvious reasons. Go ahead and download, name it nyan_cat.mp4 and place the file in the project folder. mkdir -p frames/nyan_cat ffmpeg -i 'nyan_cat.mp4' -vf 'scale=150:100' -vsync 0 'frames/nyan_cat/out%06d.png' mkdir -p metrics/nyan_cat ulimit -n 8192 prometheus_video_renderer --project nyan_cat --mode rgb --start-time 1628640000000 # 11-08-2021 00:00:00","title":"Convert video to metrics"},{"location":"prometheus-video-renderer/#backfill-metrics-into-prometheus","text":"scripts/load.sh nyan_cat","title":"Backfill metrics into Prometheus"},{"location":"prometheus-video-renderer/#visualize-output","text":"Go to http://localhost:3000/d/pvr-dash-8-rgb/prometheus-video-renderer-8-0?orgId=1&from=1628675100000&to=1628675400000 Go to http://localhost:8081/render?deviceScaleFactor=1.000000&domain=localhost&encoding=&height=1080&renderKey=TljYdA5Bp7IEU7D7rasBnwc6my7mu5hW&timeout=59&timezone=&url=http://grafana:3000/d/pvr-dash-8-rgb?from%3D1628675100000%26height%3D1080%26timeout%3D59%26to%3D1628675400000%26width%3D1920%26render%3D1&width=1920","title":"Visualize output"},{"location":"prometheus-video-renderer/#render-frames-through-grafana","text":"mkdir -p frames/nyan_cat/rendered/video grafana-image-renderer-cli sequence \\ --api-url=http://localhost:3000 \\ --api-key-or-basic-auth=admin:admin \\ --dashboard=pvr-dash-8-rgb \\ --start-time=1628675099640 \\ --frame-interval=5m \\ --out-directory=frames/nyan_cat/rendered \\ --frames=1-500","title":"Render frames through Grafana"},{"location":"prometheus-video-renderer/#merge-everything-back-into-a-video","text":"Now trim your original video to the portion of the video rendered if needed so that the audio can be merged with output. cd frames/nyan_cat/rendered ffmpeg -framerate 30 -i '%06d.png' \\ -i ../../../nyan_cat_trimmed.mp4 -c copy -map 0:0 -map 1:1 -c:v libx264rgb -pix_fmt rgb24 -preset veryslow -crf 0 -qp 0 \\ video/grafanyan_cat.mp4 Open video/grafanyan_cat.mp4 and enjoy ^_^ Example output:","title":"Merge everything back into a video"},{"location":"prometheus-video-renderer/#resources","text":"https://grafana.com/blog/2021/07/30/how-to-use-grafana-and-prometheus-to-rickroll-your-friends-or-enemies/ https://giedrius.blog/2019/09/21/is-it-a-good-idea-to-use-prometheus-for-storing-ascii-paintings/ https://github.com/MacroPower/grafana-image-renderer-sdk-go https://github.com/grafana/grafana-image-renderer","title":"Resources"},{"location":"python/","text":"Python Local setup Install pyenv and pyenv-virtualenv . Respectively for Python version management and virtualenvs management. pyenv-virtualenv uses python -m venv (Python 3.3+) if it is available and the virtualenv command if not On Mac brew install pyenv-virtualenv On Linux (Debian) sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \\ libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\ libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev curl https://pyenv.run | bash echo ''' # pyenv-virtualenv # see https://github.com/pyenv/pyenv-virtualenv export PYENV_ROOT=$HOME/.pyenv export PATH=$PATH:$PYENV_ROOT/bin eval \"$(pyenv init --path)\" eval \"$(pyenv init -)\" eval \"$(pyenv virtualenv-init -)\" ''' >> ~/.zshrc source ~/.zshrc Configure a Python 3 virtualenv pyenv install --list | grep 3.9 | less # list possible python versions pyenv install 3.9.6 # install a python version pyenv virtualenv 3.9.6 python3 # create a new virtualenv pyenv activate python3 # activate virtualenv Other useful pyenv commands: pyenv deactivate # deactivate current virtualenv pyenv versions # list installed python versions and available virtualenvs pyenv which python # see path to python executable pyenv version-name # see current virtualenv pyenv uninstall python3 # remove virtualenv / python version Generate a .python-version file pyenv version-name > .python-version .python-version is then used by pyenv-virtualenv to automatically switch to correct virtualenv. Generate a requirements.txt file pyenv virtualenv 3.9.6 [VENV_NAME] # create a new virtualenv pip install [DEPENDENCY_1] [...] # install dependencies pip freeze > requirements.txt # freeze requirements Install dependencies from a requirements.txt file pip install -r requirements.txt Consult object help help(set) Docs The Python Language Reference The Python Standard Library Package registry PyPi Containerized Python development Read the Docker blog post series Snippets #!/usr/bin/env python Performance counter time.perf_counter() import time start = time.perf_counter() # ... end = time.perf_counter() print('timing: {time}'.format(time=(end - start))) Reference count import ctypes def ref_count(address): return ctypes.c_long.from_address(address).value Interning a = 10 b = int('1010', 2) print(hex(id(a))) print(hex(id(b))) a is b # True, in [-5, 256] a = 500 b = 500 a is b # False String interning: don't do this unless optimization is needed import sys a = 'foo' b = 'foo' a is b # True, looks like an identifier so gets interned... but don't count on it a = 'foo bar' b = 'foo bar' a is b # False a = sys.intern('foo bar') b = sys.intern('foo bar') a is b # True Peephole def my_func(): a = 24 * 60 b = 'foo' c = 'foo' * 2 d = ['foo', 'bar'] e = ('foo', 'bar') f = {'foo', 'bar'} print(my_func.__code__.co_consts) # (None, 24, 60, 'foo', 2, 'bar', 1440, 'foofoo', ('foo', 'bar')) Unpacking zen Remove list duplicates a = [1, 1, 2, 2, 3, 3] *a, = {*a} # a = [1, 2, 3] Overwrite dictionary values a = {'foo': 'bar', 'baz': 'qux'} b = {'foo': 'quux', 'quuz': 'courge'} b = {**a, **b} # b = {'foo': 'quux', 'baz': 'qux', 'quuz': 'courge'} Nested unpacking a, *b, (c, d, e) = [1, 2, 3, 'XYZ'] # a = 1, b = [2, 3], c = 'X', d = 'Y', e = 'Z'","title":"Python"},{"location":"python/#python","text":"","title":"Python"},{"location":"python/#local-setup","text":"Install pyenv and pyenv-virtualenv . Respectively for Python version management and virtualenvs management. pyenv-virtualenv uses python -m venv (Python 3.3+) if it is available and the virtualenv command if not","title":"Local setup"},{"location":"python/#on-mac","text":"brew install pyenv-virtualenv","title":"On Mac"},{"location":"python/#on-linux-debian","text":"sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \\ libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\ libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev curl https://pyenv.run | bash echo ''' # pyenv-virtualenv # see https://github.com/pyenv/pyenv-virtualenv export PYENV_ROOT=$HOME/.pyenv export PATH=$PATH:$PYENV_ROOT/bin eval \"$(pyenv init --path)\" eval \"$(pyenv init -)\" eval \"$(pyenv virtualenv-init -)\" ''' >> ~/.zshrc source ~/.zshrc","title":"On Linux (Debian)"},{"location":"python/#configure-a-python-3-virtualenv","text":"pyenv install --list | grep 3.9 | less # list possible python versions pyenv install 3.9.6 # install a python version pyenv virtualenv 3.9.6 python3 # create a new virtualenv pyenv activate python3 # activate virtualenv Other useful pyenv commands: pyenv deactivate # deactivate current virtualenv pyenv versions # list installed python versions and available virtualenvs pyenv which python # see path to python executable pyenv version-name # see current virtualenv pyenv uninstall python3 # remove virtualenv / python version","title":"Configure a Python 3 virtualenv"},{"location":"python/#generate-a-python-version-file","text":"pyenv version-name > .python-version .python-version is then used by pyenv-virtualenv to automatically switch to correct virtualenv.","title":"Generate a .python-version file"},{"location":"python/#generate-a-requirementstxt-file","text":"pyenv virtualenv 3.9.6 [VENV_NAME] # create a new virtualenv pip install [DEPENDENCY_1] [...] # install dependencies pip freeze > requirements.txt # freeze requirements","title":"Generate a requirements.txt file"},{"location":"python/#install-dependencies-from-a-requirementstxt-file","text":"pip install -r requirements.txt","title":"Install dependencies from a requirements.txt file"},{"location":"python/#consult-object-help","text":"help(set)","title":"Consult object help"},{"location":"python/#docs","text":"The Python Language Reference The Python Standard Library","title":"Docs"},{"location":"python/#package-registry","text":"PyPi","title":"Package registry"},{"location":"python/#containerized-python-development","text":"Read the Docker blog post series","title":"Containerized Python development"},{"location":"python/#snippets","text":"#!/usr/bin/env python","title":"Snippets"},{"location":"python/#performance-counter","text":"time.perf_counter() import time start = time.perf_counter() # ... end = time.perf_counter() print('timing: {time}'.format(time=(end - start)))","title":"Performance counter"},{"location":"python/#reference-count","text":"import ctypes def ref_count(address): return ctypes.c_long.from_address(address).value","title":"Reference count"},{"location":"python/#interning","text":"a = 10 b = int('1010', 2) print(hex(id(a))) print(hex(id(b))) a is b # True, in [-5, 256] a = 500 b = 500 a is b # False String interning: don't do this unless optimization is needed import sys a = 'foo' b = 'foo' a is b # True, looks like an identifier so gets interned... but don't count on it a = 'foo bar' b = 'foo bar' a is b # False a = sys.intern('foo bar') b = sys.intern('foo bar') a is b # True","title":"Interning"},{"location":"python/#peephole","text":"def my_func(): a = 24 * 60 b = 'foo' c = 'foo' * 2 d = ['foo', 'bar'] e = ('foo', 'bar') f = {'foo', 'bar'} print(my_func.__code__.co_consts) # (None, 24, 60, 'foo', 2, 'bar', 1440, 'foofoo', ('foo', 'bar'))","title":"Peephole"},{"location":"python/#unpacking-zen","text":"","title":"Unpacking zen"},{"location":"python/#remove-list-duplicates","text":"a = [1, 1, 2, 2, 3, 3] *a, = {*a} # a = [1, 2, 3]","title":"Remove list duplicates"},{"location":"python/#overwrite-dictionary-values","text":"a = {'foo': 'bar', 'baz': 'qux'} b = {'foo': 'quux', 'quuz': 'courge'} b = {**a, **b} # b = {'foo': 'quux', 'baz': 'qux', 'quuz': 'courge'}","title":"Overwrite dictionary values"},{"location":"python/#nested-unpacking","text":"a, *b, (c, d, e) = [1, 2, 3, 'XYZ'] # a = 1, b = [2, 3], c = 'X', d = 'Y', e = 'Z'","title":"Nested unpacking"}]}